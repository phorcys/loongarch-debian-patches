diff -uNr a/debian/control b/debian/control
--- a/debian/control	2023-01-30 13:41:56.000000000 +0800
+++ b/debian/control	2023-06-13 20:36:58.000000000 +0800
@@ -29,12 +29,12 @@
  libboost-atomic1.74-dev,
  libboost-chrono1.74-dev,
  libboost-container1.74-dev,
- libboost-context1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
+ libboost-context1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
  libboost-contract1.74-dev,
- libboost-coroutine1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
+ libboost-coroutine1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
  libboost-date-time1.74-dev,
  libboost-exception1.74-dev,
- libboost-fiber1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
+ libboost-fiber1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
  libboost-filesystem1.74-dev,
  libboost-graph1.74-dev,
  libboost-graph-parallel1.74-dev,
@@ -112,11 +112,11 @@
  libboost-atomic1.74-dev,
  libboost-chrono1.74-dev,
  libboost-container1.74-dev,
- libboost-context1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
- libboost-coroutine1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
+ libboost-context1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
+ libboost-coroutine1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
  libboost-date-time1.74-dev,
  libboost-exception1.74-dev,
- libboost-fiber1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
+ libboost-fiber1.74-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
  libboost-filesystem1.74-dev,
  libboost-graph1.74-dev,
  libboost-graph-parallel1.74-dev,
@@ -376,7 +376,7 @@
 
 Package: libboost-context1.74.0
 Homepage: http://www.boost.org/libs/context/
-Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
+Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
 Multi-Arch: same
 Depends: ${misc:Depends}, ${shlibs:Depends}
 Pre-Depends: ${misc:Pre-Depends}
@@ -395,7 +395,7 @@
 
 Package: libboost-context1.74-dev
 Homepage: http://www.boost.org/libs/context/
-Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
+Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
 Multi-Arch: same
 Section: libdevel
 Depends: ${misc:Depends},
@@ -451,7 +451,7 @@
 
 Package: libboost-coroutine1.74.0
 Homepage: http://www.boost.org/libs/coroutine/
-Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
+Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
 Multi-Arch: same
 Depends: ${misc:Depends}, ${shlibs:Depends}
 Pre-Depends: ${misc:Pre-Depends}
@@ -475,7 +475,7 @@
 
 Package: libboost-coroutine1.74-dev
 Homepage: http://www.boost.org/libs/coroutine/
-Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
+Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
 Multi-Arch: same
 Section: libdevel
 Depends: ${misc:Depends},
@@ -546,7 +546,7 @@
 
 Package: libboost-fiber1.74.0
 Homepage: http://www.boost.org/libs/fiber/
-Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
+Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
 Multi-Arch: same
 Depends: ${misc:Depends}, ${shlibs:Depends}
 Pre-Depends: ${misc:Pre-Depends}
@@ -575,7 +575,7 @@
 
 Package: libboost-fiber1.74-dev
 Homepage: http://www.boost.org/libs/fiber/
-Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
+Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 loong64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
 Multi-Arch: same
 Section: libdevel
 Depends: ${misc:Depends},
diff -uNr a/debian/patches/series b/debian/patches/series
--- a/debian/patches/series	2023-01-30 13:41:56.000000000 +0800
+++ b/debian/patches/series	2023-06-13 20:36:34.000000000 +0800
@@ -27,3 +27,4 @@
 74a94fe7f47b2e3f707cf4589fbb635a50f22ad2.patch
 15.patch
 python-enum.patch
+support-loong64-boost1.74.patch
diff -uNr a/debian/patches/support-loong64-boost1.74.patch b/debian/patches/support-loong64-boost1.74.patch
--- a/debian/patches/support-loong64-boost1.74.patch	1970-01-01 08:00:00.000000000 +0800
+++ b/debian/patches/support-loong64-boost1.74.patch	2023-06-13 20:36:34.000000000 +0800
@@ -0,0 +1,558 @@
+Description: <short summary of the patch>
+ TODO: Put a short summary on the line above and replace this paragraph
+ with a longer explanation of this change. Complete the meta-information
+ with other relevant fields (see below for details). To make it easier, the
+ information below has been extracted from the changelog. Adjust it or drop
+ it.
+ .
+ boost1.74 (1.74.0+ds1-20) unstable; urgency=medium
+ .
+   * [dc6fadf] Better handling of the upstream version number.
+Author: Anton Gladky <gladk@debian.org>
+
+---
+The information above should follow the Patch Tagging Guidelines, please
+checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
+are templates for supplementary fields that you might want to add:
+
+Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
+Bug: <upstream-bugtracker-url>
+Bug-Debian: https://bugs.debian.org/<bugnumber>
+Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
+Forwarded: (no|not-needed|<patch-forwarded-url>)
+Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
+Reviewed-By: <name and email of someone who approved/reviewed the patch>
+Last-Update: 2023-06-13
+
+--- boost1.74-1.74.0+ds1.orig/boostcpp.jam
++++ boost1.74-1.74.0+ds1/boostcpp.jam
+@@ -607,7 +607,7 @@ rule address-model ( )
+     return <conditional>@boostcpp.deduce-address-model ;
+ }
+ 
+-local deducable-architectures = arm mips1 power riscv s390x sparc x86 combined ;
++local deducable-architectures = arm loongarch mips1 power riscv s390x sparc x86 combined ;
+ feature.feature deduced-architecture : $(deducable-architectures) : propagated optional composite hidden ;
+ for a in $(deducable-architectures)
+ {
+@@ -618,9 +618,10 @@ rule deduce-architecture ( properties *
+ {
+     local result ;
+     local filtered = [ toolset-properties $(properties) ] ;
+-    local names = arm mips1 power riscv s390x sparc x86 combined ;
++    local names = arm loongarch mips1 power riscv s390x sparc x86 combined ;
+     local idx = [ configure.find-builds "default architecture" : $(filtered)
+         : /boost/architecture//arm
++        : /boost/architecture//loongarch
+         : /boost/architecture//mips1
+         : /boost/architecture//power
+         : /boost/architecture//riscv
+--- boost1.74-1.74.0+ds1.orig/libs/config/checks/architecture/Jamroot.jam
++++ boost1.74-1.74.0+ds1/libs/config/checks/architecture/Jamroot.jam
+@@ -17,6 +17,7 @@ obj 64 : 64.cpp ;
+ 
+ obj arm      : arm.cpp ;
+ obj combined : combined.cpp ;
++obj loongarch : loongarch.cpp ;
+ obj mips1    : mips1.cpp ;
+ obj power    : power.cpp ;
+ obj riscv    : riscv.cpp ;
+--- /dev/null
++++ boost1.74-1.74.0+ds1/libs/config/checks/architecture/loongarch.cpp
+@@ -0,0 +1,11 @@
++// loongarch.cpp
++//
++// Copyright (c) 2022 Zhang Na
++//
++// Distributed under the Boost Software License Version 1.0. (See
++// accompanying file LICENSE_1_0.txt or copy at
++// http://www.boost.org/LICENSE_1_0.txt)
++
++#if !defined(__loongarch__)
++#error "Not LoongArch"
++#endif
+--- boost1.74-1.74.0+ds1.orig/libs/context/build/Jamfile.v2
++++ boost1.74-1.74.0+ds1/libs/context/build/Jamfile.v2
+@@ -228,6 +228,19 @@ alias asm_sources
+      <toolset>darwin
+    ;
+ 
++# LOONGARCH64
++# LOONGARCH64/SYSV/ELF
++alias asm_sources
++   : asm/make_loongarch64_sysv_elf_gas.S
++     asm/jump_loongarch64_sysv_elf_gas.S
++     asm/ontop_loongarch64_sysv_elf_gas.S
++   : <abi>sysv
++     <address-model>64
++     <architecture>loongarch
++     <binary-format>elf
++     <toolset>gcc
++   ;
++
+ # MIPS
+ # MIPS32/O32/ELF
+ alias asm_sources
+--- boost1.74-1.74.0+ds1.orig/libs/context/build/architecture.jam
++++ boost1.74-1.74.0+ds1/libs/context/build/architecture.jam
+@@ -55,6 +55,10 @@ rule deduce-architecture ( properties *
+         {
+             return <architecture>arm ;
+         }
++        else if [ configure.builds /boost/architecture//loongarch : $(properties) : loongarch ]
++        {
++            return <architecture>loongarch ;
++        }
+         else if [ configure.builds /boost/architecture//mips1 : $(properties) : mips1 ]
+         {
+             return <architecture>mips1 ;
+--- boost1.74-1.74.0+ds1.orig/libs/context/doc/architectures.qbk
++++ boost1.74-1.74.0+ds1/libs/context/doc/architectures.qbk
+@@ -15,6 +15,7 @@ architectures:
+     [[arm (aarch32)] [AAPCS|ELF]      [AAPCS|PE] [-]           [AAPCS|MACH-O]]
+     [[arm (aarch64)] [AAPCS|ELF]      [-]        [-]           [AAPCS|MACH-O]]
+     [[i386]          [SYSV|ELF]       [MS|PE]    [SYSV|MACH-O] [-]]
++    [[loongarch64]   [SYSV|ELF]       [-]        [-]           [-]]
+     [[mips1]         [O32|ELF]        [-]        [-]           [-]]
+     [[ppc32]         [SYSV|ELF,XCOFF] [-]        [SYSV|MACH-O] [-]]
+     [[ppc64]         [SYSV|ELF,XCOFF] [-]        [SYSV|MACH-O] [-]]
+--- boost1.74-1.74.0+ds1.orig/libs/context/doc/context.xml
++++ boost1.74-1.74.0+ds1/libs/context/doc/context.xml
+@@ -3382,6 +3382,33 @@
+           <row>
+             <entry>
+               <para>
++                loongarch64
++              </para>
++            </entry>
++            <entry>
++              <para>
++                SYSV|ELF
++              </para>
++            </entry>
++            <entry>
++              <para>
++                -
++              </para>
++            </entry>
++            <entry>
++              <para>
++                -
++              </para>
++            </entry>
++            <entry>
++              <para>
++                -
++              </para>
++            </entry>
++          </row>
++          <row>
++            <entry>
++              <para>
+                 mips1
+               </para>
+             </entry>
+--- /dev/null
++++ boost1.74-1.74.0+ds1/libs/context/src/asm/jump_loongarch64_sysv_elf_gas.S
+@@ -0,0 +1,121 @@
++/*******************************************************
++ *                                                     *
++ *  -------------------------------------------------  *
++ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
++ *  -------------------------------------------------  *
++ *  |     0     |     8     |    16     |     24    |  *
++ *  -------------------------------------------------  *
++ *  |    FS0    |    FS1    |    FS2    |    FS3    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
++ *  -------------------------------------------------  *
++ *  |     32    |    40     |     48    |     56    |  *
++ *  -------------------------------------------------  *
++ *  |    FS4    |    FS5    |    FS6    |    FS7    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
++ *  -------------------------------------------------  *
++ *  |     64    |    72     |     80    |     88    |  *
++ *  -------------------------------------------------  *
++ *  |    S0     |    S1     |     S2    |     S3    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
++ *  -------------------------------------------------  *
++ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
++ *  -------------------------------------------------  *
++ *  |    S4     |    S5     |     S6    |     S7    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
++ *  -------------------------------------------------  *
++ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
++ *  -------------------------------------------------  *
++ *  |    S8     |    FP     |     RA    |     PC    |  *
++ *  -------------------------------------------------  *
++ *                                                     *
++ * *****************************************************/
++
++.file "jump_loongarch64_sysv_elf_gas.S"
++.text
++.globl jump_fcontext
++.align 2
++.type jump_fcontext,@function
++jump_fcontext:
++    # reserve space on stack
++    addi.d  $sp, $sp, -160
++
++    # save fs0 - fs7
++    fst.d  $fs0, $sp, 0
++    fst.d  $fs1, $sp, 8
++    fst.d  $fs2, $sp, 16
++    fst.d  $fs3, $sp, 24
++    fst.d  $fs4, $sp, 32
++    fst.d  $fs5, $sp, 40
++    fst.d  $fs6, $sp, 48
++    fst.d  $fs7, $sp, 56
++
++    # save s0 - s8, fp, ra
++    st.d  $s0, $sp, 64
++    st.d  $s1, $sp, 72
++    st.d  $s2, $sp, 80
++    st.d  $s3, $sp, 88
++    st.d  $s4, $sp, 96
++    st.d  $s5, $sp, 104
++    st.d  $s6, $sp, 112
++    st.d  $s7, $sp, 120
++    st.d  $s8, $sp, 128
++    st.d  $fp, $sp, 136
++    st.d  $ra, $sp, 144
++
++    # save RA as PC
++    st.d  $ra, $sp, 152
++
++    # store SP (pointing to context-data) in A2
++    move  $a2, $sp
++
++    # restore SP (pointing to context-data) from A0
++    move  $sp, $a0
++
++    # load fs0 - fs7
++    fld.d  $fs0, $sp, 0
++    fld.d  $fs1, $sp, 8
++    fld.d  $fs2, $sp, 16
++    fld.d  $fs3, $sp, 24
++    fld.d  $fs4, $sp, 32
++    fld.d  $fs5, $sp, 40
++    fld.d  $fs6, $sp, 48
++    fld.d  $fs7, $sp, 56
++
++    #load s0 - s7
++    ld.d  $s0, $sp, 64
++    ld.d  $s1, $sp, 72
++    ld.d  $s2, $sp, 80
++    ld.d  $s3, $sp, 88
++    ld.d  $s4, $sp, 96
++    ld.d  $s5, $sp, 104
++    ld.d  $s6, $sp, 112
++    ld.d  $s7, $sp, 120
++    ld.d  $s8, $sp, 128
++    ld.d  $fp, $sp, 136
++    ld.d  $ra, $sp, 144
++
++    # return transfer_t from jump
++    # pass transfer_t as first arg in context function
++    # a0 == FCTX, a1 == DATA
++    move  $a0, $a2
++
++    # load PC
++    ld.d  $a2, $sp, 152
++
++    # restore stack
++    addi.d  $sp, $sp, 160
++
++    # jump to context
++    jr  $a2
++.size jump_fcontext, .-jump_fcontext
++
++/* Mark that we don't need executable stack.  */
++.section .note.GNU-stack,"",%progbits
+--- /dev/null
++++ boost1.74-1.74.0+ds1/libs/context/src/asm/make_loongarch64_sysv_elf_gas.S
+@@ -0,0 +1,72 @@
++/*******************************************************
++ *                                                     *
++ *  -------------------------------------------------  *
++ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
++ *  -------------------------------------------------  *
++ *  |     0     |     8     |    16     |     24    |  *
++ *  -------------------------------------------------  *
++ *  |    FS0    |    FS1    |    FS2    |    FS3    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
++ *  -------------------------------------------------  *
++ *  |     32    |    40     |     48    |     56    |  *
++ *  -------------------------------------------------  *
++ *  |    FS4    |    FS5    |    FS6    |    FS7    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
++ *  -------------------------------------------------  *
++ *  |     64    |    72     |     80    |     88    |  *
++ *  -------------------------------------------------  *
++ *  |    S0     |    S1     |     S2    |     S3    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
++ *  -------------------------------------------------  *
++ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
++ *  -------------------------------------------------  *
++ *  |    S4     |    S5     |     S6    |     S7    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
++ *  -------------------------------------------------  *
++ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
++ *  -------------------------------------------------  *
++ *  |    S8     |    FP     |     RA    |     PC    |  *
++ *  -------------------------------------------------  *
++ *                                                     *
++ * *****************************************************/
++
++.file "make_loongarch64_sysv_elf_gas.S"
++.text
++.globl make_fcontext
++.align 2
++.type make_fcontext,@function
++make_fcontext:
++    # shift address in A0 to lower 16 byte boundary
++    bstrins.d $a0, $zero, 3, 0
++
++    # reserve space for context-data on context-stack
++    addi.d  $a0, $a0, -160
++
++    # third arg of make_fcontext() == address of context-function
++    st.d  $a2, $a0, 152
++
++    # save address of finish as return-address for context-function
++    # will be entered after context-function returns
++    la.local  $a4, finish
++    st.d  $a4, $a0, 144
++
++    # return pointer to context-data
++    jr  $ra
++
++finish:
++    # exit code is zero
++    li.d  $a0, 0
++    # call _exit(0)
++    b  %plt(_exit)
++
++.size make_fcontext, .-make_fcontext
++/* Mark that we don't need executable stack.  */
++.section .note.GNU-stack,"",%progbits
+--- /dev/null
++++ boost1.74-1.74.0+ds1/libs/context/src/asm/ontop_loongarch64_sysv_elf_gas.S
+@@ -0,0 +1,118 @@
++/*******************************************************
++ *                                                     *
++ *  -------------------------------------------------  *
++ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
++ *  -------------------------------------------------  *
++ *  |     0     |     8     |    16     |     24    |  *
++ *  -------------------------------------------------  *
++ *  |    FS0    |    FS1    |    FS2    |    FS3    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
++ *  -------------------------------------------------  *
++ *  |     32    |    40     |     48    |     56    |  *
++ *  -------------------------------------------------  *
++ *  |    FS4    |    FS5    |    FS6    |    FS7    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
++ *  -------------------------------------------------  *
++ *  |     64    |    72     |     80    |     88    |  *
++ *  -------------------------------------------------  *
++ *  |    S0     |    S1     |     S2    |     S3    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
++ *  -------------------------------------------------  *
++ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
++ *  -------------------------------------------------  *
++ *  |    S4     |    S5     |     S6    |     S7    |  *
++ *  -------------------------------------------------  *
++ *  -------------------------------------------------  *
++ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
++ *  -------------------------------------------------  *
++ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
++ *  -------------------------------------------------  *
++ *  |    S8     |    FP     |     RA    |     PC    |  *
++ *  -------------------------------------------------  *
++ *                                                     *
++ * *****************************************************/
++
++.file "ontop_loongarch64_sysv_elf_gas.S"
++.text
++.globl ontop_fcontext
++.align 2
++.type ontop_fcontext,@function
++ontop_fcontext:
++    # reserve space on stack
++    addi.d  $sp, $sp, -160
++
++    # save fs0 - fs7
++    fst.d  $fs0, $sp, 0
++    fst.d  $fs1, $sp, 8
++    fst.d  $fs2, $sp, 16
++    fst.d  $fs3, $sp, 24
++    fst.d  $fs4, $sp, 32
++    fst.d  $fs5, $sp, 40
++    fst.d  $fs6, $sp, 48
++    fst.d  $fs7, $sp, 56
++
++    # save s0 - s8, fp, ra
++    st.d  $s0, $sp, 64
++    st.d  $s1, $sp, 72
++    st.d  $s2, $sp, 80
++    st.d  $s3, $sp, 88
++    st.d  $s4, $sp, 96
++    st.d  $s5, $sp, 104
++    st.d  $s6, $sp, 112
++    st.d  $s7, $sp, 120
++    st.d  $s8, $sp, 128
++    st.d  $fp, $sp, 136
++    st.d  $ra, $sp, 144
++
++    # save RA as PC
++    st.d  $ra, $sp, 152
++
++    # store SP (pointing to context-data) in A3
++    move  $a3, $sp
++
++    # restore SP (pointing to context-data) from A0
++    move  $sp, $a0
++
++    # load fs0 - fs11
++    fld.d  $fs0, $sp, 0
++    fld.d  $fs1, $sp, 8
++    fld.d  $fs2, $sp, 16
++    fld.d  $fs3, $sp, 24
++    fld.d  $fs4, $sp, 32
++    fld.d  $fs5, $sp, 40
++    fld.d  $fs6, $sp, 48
++    fld.d  $fs7, $sp, 56
++
++    #load s0 - s11, fp, ra
++    ld.d  $s0, $sp, 64
++    ld.d  $s1, $sp, 72
++    ld.d  $s2, $sp, 80
++    ld.d  $s3, $sp, 88
++    ld.d  $s4, $sp, 96
++    ld.d  $s5, $sp, 104
++    ld.d  $s6, $sp, 112
++    ld.d  $s7, $sp, 120
++    ld.d  $s8, $sp, 128
++    ld.d  $fp, $sp, 136
++    ld.d  $ra, $sp, 144
++
++    # return transfer_t from jump
++    # pass transfer_t as first arg in context function
++    # a0 == FCTX, a1 == DATA
++    move  $a0, $a3
++
++    # adjust stack
++    addi.d  $sp, $sp, 160
++
++    # jump to context
++    jr  $a2
++.size ontop_fcontext, .-ontop_fcontext
++
++/* Mark that we don't need executable stack.  */
++.section .note.GNU-stack,"",%progbits
+--- boost1.74-1.74.0+ds1.orig/libs/predef/include/boost/predef/architecture.h
++++ boost1.74-1.74.0+ds1/libs/predef/include/boost/predef/architecture.h
+@@ -15,6 +15,7 @@ http://www.boost.org/LICENSE_1_0.txt)
+ #include <boost/predef/architecture/blackfin.h>
+ #include <boost/predef/architecture/convex.h>
+ #include <boost/predef/architecture/ia64.h>
++#include <boost/predef/architecture/loongarch.h>
+ #include <boost/predef/architecture/m68k.h>
+ #include <boost/predef/architecture/mips.h>
+ #include <boost/predef/architecture/parisc.h>
+--- /dev/null
++++ boost1.74-1.74.0+ds1/libs/predef/include/boost/predef/architecture/loongarch.h
+@@ -0,0 +1,41 @@
++/*
++Copyright Zhang Na 2022
++Distributed under the Boost Software License, Version 1.0.
++(See accompanying file LICENSE_1_0.txt or copy at
++http://www.boost.org/LICENSE_1_0.txt)
++*/
++
++#ifndef BOOST_PREDEF_ARCHITECTURE_LOONGARCH_H
++#define BOOST_PREDEF_ARCHITECTURE_LOONGARCH_H
++
++#include <boost/predef/version_number.h>
++#include <boost/predef/make.h>
++
++/* tag::reference[]
++= `BOOST_ARCH_LOONGARCH`
++
++[options="header"]
++|===
++| {predef_symbol} | {predef_version}
++
++| `+__loongarch__+` | {predef_detection}
++|===
++*/ // end::reference[]
++
++#define BOOST_ARCH_LOONGARCH BOOST_VERSION_NUMBER_NOT_AVAILABLE
++
++#if defined(__loongarch__)
++#   undef BOOST_ARCH_LOONGARCH
++#   define BOOST_ARCH_LOONGARCH BOOST_VERSION_NUMBER_AVAILABLE
++#endif
++
++#if BOOST_ARCH_LOONGARCH
++#   define BOOST_ARCH_LOONGARCH_AVAILABLE
++#endif
++
++#define BOOST_ARCH_LOONGARCH_NAME "LoongArch"
++
++#endif
++
++#include <boost/predef/detail/test.h>
++BOOST_PREDEF_DECLARE_TEST(BOOST_ARCH_LOONGARCH,BOOST_ARCH_LOONGARCH_NAME)
+--- boost1.74-1.74.0+ds1.orig/libs/predef/include/boost/predef/other/endian.h
++++ boost1.74-1.74.0+ds1/libs/predef/include/boost/predef/other/endian.h
+@@ -125,6 +125,7 @@ information and acquired knowledge:
+         defined(__ARMEL__) || \
+         defined(__THUMBEL__) || \
+         defined(__AARCH64EL__) || \
++        defined(__loongarch__) || \
+         defined(_MIPSEL) || \
+         defined(__MIPSEL) || \
+         defined(__MIPSEL__) || \
+--- boost1.74-1.74.0+ds1.orig/tools/build/src/tools/features/architecture-feature.jam
++++ boost1.74-1.74.0+ds1/tools/build/src/tools/features/architecture-feature.jam
+@@ -10,7 +10,7 @@ import feature ;
+ [[bbv2.builtin.features.architecture]]`architecture`::
+ *Allowed values:* `x86`, `ia64`, `sparc`, `power`, `mips1`, `mips2`,
+ `mips3`, `mips4`, `mips32`, `mips32r2`, `mips64`, `parisc`, `arm`,
+-`s390x`, `combined`, `combined-x86-power`.
++`s390x`, `loongarch`, `combined`, `combined-x86-power`.
+ +
+ Specifies the general processor family to generate code for.
+ 
+@@ -29,6 +29,8 @@ feature.feature architecture
+ 
+         # RS/6000 & PowerPC
+         power
++        # LoongArch
++        loongarch
+ 
+         # MIPS/SGI
+         mips1 mips2 mips3 mips4 mips32 mips32r2 mips64
