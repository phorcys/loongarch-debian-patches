diff -uNr a/debian/patches/series b/debian/patches/series
--- a/debian/patches/series	2023-01-13 16:02:01.000000000 +0800
+++ b/debian/patches/series	2023-05-17 08:07:58.000000000 +0800
@@ -2,3 +2,4 @@
 disable_v8_sunspider_tests.patch
 s390x_jscore.diff
 hppa_stackbase.diff
+support-loong64.patch
diff -uNr a/debian/patches/support-loong64.patch b/debian/patches/support-loong64.patch
--- a/debian/patches/support-loong64.patch	1970-01-01 08:00:00.000000000 +0800
+++ b/debian/patches/support-loong64.patch	2023-05-17 08:07:58.000000000 +0800
@@ -0,0 +1,46 @@
+Description: <short summary of the patch>
+ TODO: Put a short summary on the line above and replace this paragraph
+ with a longer explanation of this change. Complete the meta-information
+ with other relevant fields (see below for details). To make it easier, the
+ information below has been extracted from the changelog. Adjust it or drop
+ it.
+ .
+ qtscript-opensource-src (5.15.8+dfsg-2) unstable; urgency=medium
+ .
+   * Upload to unstable.
+Author: Dmitry Shachnev <mitya57@debian.org>
+
+---
+The information above should follow the Patch Tagging Guidelines, please
+checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
+are templates for supplementary fields that you might want to add:
+
+Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
+Bug: <upstream-bugtracker-url>
+Bug-Debian: https://bugs.debian.org/<bugnumber>
+Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
+Forwarded: (no|not-needed|<patch-forwarded-url>)
+Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
+Reviewed-By: <name and email of someone who approved/reviewed the patch>
+Last-Update: 2023-05-17
+
+--- qtscript-opensource-src-5.15.8+dfsg.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h
++++ qtscript-opensource-src-5.15.8+dfsg/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h
+@@ -490,7 +490,7 @@ namespace JSC {
+             u.asBits.tag = CellTag;
+         else
+             u.asBits.tag = EmptyValueTag;
+-        u.asBits.payload = reinterpret_cast<int32_t>(ptr);
++        u.asBits.payload = reinterpret_cast<int64_t>(ptr);
+ #if ENABLE(JSC_ZOMBIES)
+         ASSERT(!isZombie());
+ #endif
+@@ -502,7 +502,7 @@ namespace JSC {
+             u.asBits.tag = CellTag;
+         else
+             u.asBits.tag = EmptyValueTag;
+-        u.asBits.payload = reinterpret_cast<int32_t>(const_cast<JSCell*>(ptr));
++        u.asBits.payload = reinterpret_cast<int64_t>(const_cast<JSCell*>(ptr));
+ #if ENABLE(JSC_ZOMBIES)
+         ASSERT(!isZombie());
+ #endif
