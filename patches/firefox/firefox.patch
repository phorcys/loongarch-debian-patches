diff -uNr a/debian/patches/series b/debian/patches/series
--- a/debian/patches/series	2023-04-20 05:12:24.000000000 +0800
+++ b/debian/patches/series	2023-06-18 19:15:08.000000000 +0800
@@ -24,3 +24,6 @@
 debian-hacks/Relax-nodejs-minimum-version.patch
 debian-hacks/Relax-minimum-supporter-rust-version-to-1.63.patch
 debian-hacks/Revert-https-phabricator.services.mozilla.com-D17179.patch
+support-loong64.patch
+support-loong64-fix-bindgen.patch
+temp-fix-libclang-detection.patch
diff -uNr a/debian/patches/support-loong64-fix-bindgen.patch b/debian/patches/support-loong64-fix-bindgen.patch
--- a/debian/patches/support-loong64-fix-bindgen.patch	1970-01-01 08:00:00.000000000 +0800
+++ b/debian/patches/support-loong64-fix-bindgen.patch	2023-06-18 19:08:57.000000000 +0800
@@ -0,0 +1,92 @@
+Description: <short summary of the patch>
+ TODO: Put a short summary on the line above and replace this paragraph
+ with a longer explanation of this change. Complete the meta-information
+ with other relevant fields (see below for details). To make it easier, the
+ information below has been extracted from the changelog. Adjust it or drop
+ it.
+ .
+ firefox (112.0.1-1) unstable; urgency=medium
+ .
+   * New upstream release.
+ .
+   * gfx/thebes/gfxFont.cpp, gfx/thebes/gfxFontEntry.cpp: Don't attempt
+     to use font extents if we didn't get a valid 'head' table, or if
+     it's not an sfnt resource. bz#1827950. Closes: #1034363.
+Author: Mike Hommey <glandium@debian.org>
+Bug-Debian: https://bugs.debian.org/1034363
+
+---
+The information above should follow the Patch Tagging Guidelines, please
+checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
+are templates for supplementary fields that you might want to add:
+
+Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
+Bug: <upstream-bugtracker-url>
+Bug-Debian: https://bugs.debian.org/<bugnumber>
+Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
+Forwarded: (no|not-needed|<patch-forwarded-url>)
+Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
+Reviewed-By: <name and email of someone who approved/reviewed the patch>
+Last-Update: 2023-06-18
+
+--- firefox-112.0.1.orig/third_party/rust/bindgen/.cargo-checksum.json
++++ firefox-112.0.1/third_party/rust/bindgen/.cargo-checksum.json
+@@ -1 +1 @@
+-{"files":{"Cargo.toml":"973fd894e8985b9b1fda4bf34f0e71af54d69a61fe6d8b7f1bbe443eb5863bcc","LICENSE":"c23953d9deb0a3312dbeaf6c128a657f3591acee45067612fa68405eaa4525db","README.md":"cabc15d1a4d23868718052a4e5eaa1fd3f493ef6fb16c499210a48588651a805","build.rs":"4a9c4ac3759572e17de312a9d3f4ced3b6fd3c71811729e5a8d06bfbd1ac8f82","callbacks.rs":"aa3d8789241e965eb07a0103c5fd7b81091431458d83c2eaa9611c3d54e909f2","clang.rs":"a38d153516c6685b46723010793b2f4e8b16468f3cd3296781dea6e485cd66da","codegen/bitfield_unit.rs":"fddeaeab5859f4e82081865595b7705f5c0774d997df95fa5c655b81b9cae125","codegen/bitfield_unit_tests.rs":"9df86490de5e9d66ccea583dcb686dd440375dc1a3c3cf89a89d5de3883bf28a","codegen/dyngen.rs":"dd50fa3b4eaa5f4e479d4755cf109961e1fcd99fb32c93316da1f8eab80f37d9","codegen/error.rs":"5e308b8c54b68511fc8ea2ad15ddac510172c4ff460a80a265336440b0c9653d","codegen/helpers.rs":"5f24007a09e50db7bd2b49b07100cfed649c7b22232558e28c99c759d5d14152","codegen/impl_debug.rs":"71d8e28873ba2de466f2637a824746963702f0511728037d72ee5670c51194cb","codegen/impl_partialeq.rs":"f4599e32c66179ae515a6518a3e94b686689cf59f7dd9ab618c3fb69f17d2c77","codegen/mod.rs":"b35b9371266633e8d813aa8bc4c44ee49cacf1b6e740973db252481c0d3799c4","codegen/postprocessing/merge_extern_blocks.rs":"be5c5ff6d3d3d4e940814c4dc77f8d687aa6b053dcfbd2185c09616ba9022bf2","codegen/postprocessing/mod.rs":"d1e8c2864d5194a4cb2f6731c0ef582a55b363df9c4f888c26942ff37f728e1c","codegen/postprocessing/sort_semantically.rs":"3071dd509f2e5d3dfd99cafa6ee19bbacb9fec1c61a0b3f6e284a75c1f2c3db6","codegen/struct_layout.rs":"7dfc814d3c914a0c53d8ed031baf543dab1def5959e8ab85220cad69a506383a","deps.rs":"5ee2332fdb10325f3b0a0c6d9ba94e13eb631ef39e955fa958afc3625bdb5448","extra_assertions.rs":"494534bd4f18b80d89b180c8a93733e6617edcf7deac413e9a73fd6e7bc9ced7","features.rs":"af20bd617cce27f6716ab3d61a1c8ddfaa46227f4a0d435b08a19d5f277cf8ba","ir/analysis/derive.rs":"ec514585eb40f0e3306bf3302aec0152a2e95e8dce13a67c36b5f00c0cbb76ef","ir/analysis/has_destructor.rs":"7a82f01e7e0595a31b56f7c398fa3019b3fe9100a2a73b56768f7e6943dcc3ce","ir/analysis/has_float.rs":"58ea1e38a59ef208400fd65d426cb5b288949df2d383b3a194fa01b99d2a87fa","ir/analysis/has_type_param_in_array.rs":"d1b9eb119dc14f662eb9bd1394c859f485479e4912589709cdd33f6752094e22","ir/analysis/has_vtable.rs":"368cf30fbe3fab7190fab48718b948caac5da8c9e797b709488716b919315636","ir/analysis/mod.rs":"0c10d8eeb26d7e6f4ce18e9dfb74ea1f9deff5cd350298aca3dc1041b17c20c4","ir/analysis/sizedness.rs":"944443d6aab35d2dd80e4f5e59176ac1e1c463ba2f0eb25d33f1d95dfac1a6d0","ir/analysis/template_params.rs":"a2d2e247c2f51cd90e83f11bce0305c2e498232d015f88192b44e8522e7fd8b1","ir/annotations.rs":"f79de09803a3f3ccb33e366a10a707da98cd00a56ba18312ea927d6c977220a4","ir/comment.rs":"5dcfab0095d967daad9b2927093fce3786b1a2146171580afbf526ba56855e36","ir/comp.rs":"8a96d6760c988d35e07462d66975218fbf3121902d313d71c553f2b473d37bc8","ir/context.rs":"ee5606460afff17c2fcfbd72779edb6038b6ba390e8b7a5b2ccb694acb7036cb","ir/derive.rs":"e5581852eec87918901a129284b4965aefc8a19394187a8095779a084f28fabe","ir/dot.rs":"2d79d698e6ac59ce032840e62ff11103abed1d5e9e700cf383b492333eeebe1f","ir/enum_ty.rs":"13c1de2d0668f811ea1f3353c77c892e475b2e6f5935f6a0b7f711c0ffa64c21","ir/function.rs":"36d9967cf9cd28352b682747376c5e4ef5f679eff9907b670edd2c670058bbce","ir/int.rs":"68a86182743ec338d58e42203364dc7c8970cb7ec3550433ca92f0c9489b4442","ir/item.rs":"6098bceb8d98fe72e1442ea71d36a5eabfdb153aa767527d235b654f912a9333","ir/item_kind.rs":"7666a1ff1b8260978b790a08b4139ab56b5c65714a5652bbcec7faa7443adc36","ir/layout.rs":"61a0e4250ceab889606973f930f4d692837a13a69ae2579738ff09843fed3d65","ir/mod.rs":"713cd537434567003197a123cbae679602c715e976d22f7b23dafd0826ea4c70","ir/module.rs":"7cae5561bcf84a5c3b1ee8f1c3336a33b7f44f0d5ffe885fb108289983fe763e","ir/objc.rs":"dd394c1db6546cbe5111ce5cd2f211f9839aba81c5e7228c2a68fba386bc259f","ir/template.rs":"3bb3e7f6ec28eff73c2032922d30b93d70da117b848e9cb02bdf6c9a74294f7f","ir/traversal.rs":"0c37a0898801ad39bffc8dddd1ee8baa61bb7cf4f3fdc25c8fdd56b6c96ada65","ir/ty.rs":"d910af9f9cc67513914f71553ea2f493562ea8cc20117cb17b7658fe5d670caf","ir/var.rs":"f3ffbfc26de1dc6e23fa46a156f98aec1c6b339dbd7627934a4ec57332a25650","lib.rs":"0edba5c8926ff08c6ae8ca5c64cb6ed89acf0d358f3bb6fa0eb0fc4f0f055f01","log_stubs.rs":"9f974e041e35c8c7e29985d27ae5cd0858d68f8676d1dc005c6388d7d011707f","parse.rs":"4ffc54415eadb622ee488603862788c78361ef2c889de25259441a340c2a010f","regex_set.rs":"ead517110d8ef80e222326d000a4f02b9bd2ce99b58a514ee90b89f0042f6a81","time.rs":"8efe317e7c6b5ba8e0865ce7b49ca775ee8a02590f4241ef62f647fa3c22b68e"},"package":"36d860121800b2a9a94f9b5604b332d5cffb234ce17609ea479d723dbc9d3885"}
+\ No newline at end of file
++{"files":{"Cargo.toml":"973fd894e8985b9b1fda4bf34f0e71af54d69a61fe6d8b7f1bbe443eb5863bcc","LICENSE":"c23953d9deb0a3312dbeaf6c128a657f3591acee45067612fa68405eaa4525db","README.md":"cabc15d1a4d23868718052a4e5eaa1fd3f493ef6fb16c499210a48588651a805","build.rs":"4a9c4ac3759572e17de312a9d3f4ced3b6fd3c71811729e5a8d06bfbd1ac8f82","callbacks.rs":"aa3d8789241e965eb07a0103c5fd7b81091431458d83c2eaa9611c3d54e909f2","clang.rs":"a38d153516c6685b46723010793b2f4e8b16468f3cd3296781dea6e485cd66da","codegen/bitfield_unit.rs":"fddeaeab5859f4e82081865595b7705f5c0774d997df95fa5c655b81b9cae125","codegen/bitfield_unit_tests.rs":"9df86490de5e9d66ccea583dcb686dd440375dc1a3c3cf89a89d5de3883bf28a","codegen/dyngen.rs":"dd50fa3b4eaa5f4e479d4755cf109961e1fcd99fb32c93316da1f8eab80f37d9","codegen/error.rs":"5e308b8c54b68511fc8ea2ad15ddac510172c4ff460a80a265336440b0c9653d","codegen/helpers.rs":"5f24007a09e50db7bd2b49b07100cfed649c7b22232558e28c99c759d5d14152","codegen/impl_debug.rs":"71d8e28873ba2de466f2637a824746963702f0511728037d72ee5670c51194cb","codegen/impl_partialeq.rs":"f4599e32c66179ae515a6518a3e94b686689cf59f7dd9ab618c3fb69f17d2c77","codegen/mod.rs":"bc614cce8d46af6485e10c27e4f11d2b0dba0db369ec035896031f6eb28bbc13","codegen/postprocessing/merge_extern_blocks.rs":"be5c5ff6d3d3d4e940814c4dc77f8d687aa6b053dcfbd2185c09616ba9022bf2","codegen/postprocessing/mod.rs":"d1e8c2864d5194a4cb2f6731c0ef582a55b363df9c4f888c26942ff37f728e1c","codegen/postprocessing/sort_semantically.rs":"3071dd509f2e5d3dfd99cafa6ee19bbacb9fec1c61a0b3f6e284a75c1f2c3db6","codegen/struct_layout.rs":"7dfc814d3c914a0c53d8ed031baf543dab1def5959e8ab85220cad69a506383a","deps.rs":"5ee2332fdb10325f3b0a0c6d9ba94e13eb631ef39e955fa958afc3625bdb5448","extra_assertions.rs":"494534bd4f18b80d89b180c8a93733e6617edcf7deac413e9a73fd6e7bc9ced7","features.rs":"af20bd617cce27f6716ab3d61a1c8ddfaa46227f4a0d435b08a19d5f277cf8ba","ir/analysis/derive.rs":"ec514585eb40f0e3306bf3302aec0152a2e95e8dce13a67c36b5f00c0cbb76ef","ir/analysis/has_destructor.rs":"7a82f01e7e0595a31b56f7c398fa3019b3fe9100a2a73b56768f7e6943dcc3ce","ir/analysis/has_float.rs":"58ea1e38a59ef208400fd65d426cb5b288949df2d383b3a194fa01b99d2a87fa","ir/analysis/has_type_param_in_array.rs":"d1b9eb119dc14f662eb9bd1394c859f485479e4912589709cdd33f6752094e22","ir/analysis/has_vtable.rs":"368cf30fbe3fab7190fab48718b948caac5da8c9e797b709488716b919315636","ir/analysis/mod.rs":"0c10d8eeb26d7e6f4ce18e9dfb74ea1f9deff5cd350298aca3dc1041b17c20c4","ir/analysis/sizedness.rs":"944443d6aab35d2dd80e4f5e59176ac1e1c463ba2f0eb25d33f1d95dfac1a6d0","ir/analysis/template_params.rs":"a2d2e247c2f51cd90e83f11bce0305c2e498232d015f88192b44e8522e7fd8b1","ir/annotations.rs":"f79de09803a3f3ccb33e366a10a707da98cd00a56ba18312ea927d6c977220a4","ir/comment.rs":"5dcfab0095d967daad9b2927093fce3786b1a2146171580afbf526ba56855e36","ir/comp.rs":"8a96d6760c988d35e07462d66975218fbf3121902d313d71c553f2b473d37bc8","ir/context.rs":"ee5606460afff17c2fcfbd72779edb6038b6ba390e8b7a5b2ccb694acb7036cb","ir/derive.rs":"e5581852eec87918901a129284b4965aefc8a19394187a8095779a084f28fabe","ir/dot.rs":"2d79d698e6ac59ce032840e62ff11103abed1d5e9e700cf383b492333eeebe1f","ir/enum_ty.rs":"13c1de2d0668f811ea1f3353c77c892e475b2e6f5935f6a0b7f711c0ffa64c21","ir/function.rs":"36d9967cf9cd28352b682747376c5e4ef5f679eff9907b670edd2c670058bbce","ir/int.rs":"68a86182743ec338d58e42203364dc7c8970cb7ec3550433ca92f0c9489b4442","ir/item.rs":"6098bceb8d98fe72e1442ea71d36a5eabfdb153aa767527d235b654f912a9333","ir/item_kind.rs":"7666a1ff1b8260978b790a08b4139ab56b5c65714a5652bbcec7faa7443adc36","ir/layout.rs":"61a0e4250ceab889606973f930f4d692837a13a69ae2579738ff09843fed3d65","ir/mod.rs":"713cd537434567003197a123cbae679602c715e976d22f7b23dafd0826ea4c70","ir/module.rs":"7cae5561bcf84a5c3b1ee8f1c3336a33b7f44f0d5ffe885fb108289983fe763e","ir/objc.rs":"dd394c1db6546cbe5111ce5cd2f211f9839aba81c5e7228c2a68fba386bc259f","ir/template.rs":"3bb3e7f6ec28eff73c2032922d30b93d70da117b848e9cb02bdf6c9a74294f7f","ir/traversal.rs":"0c37a0898801ad39bffc8dddd1ee8baa61bb7cf4f3fdc25c8fdd56b6c96ada65","ir/ty.rs":"d910af9f9cc67513914f71553ea2f493562ea8cc20117cb17b7658fe5d670caf","ir/var.rs":"f3ffbfc26de1dc6e23fa46a156f98aec1c6b339dbd7627934a4ec57332a25650","lib.rs":"0edba5c8926ff08c6ae8ca5c64cb6ed89acf0d358f3bb6fa0eb0fc4f0f055f01","log_stubs.rs":"9f974e041e35c8c7e29985d27ae5cd0858d68f8676d1dc005c6388d7d011707f","parse.rs":"4ffc54415eadb622ee488603862788c78361ef2c889de25259441a340c2a010f","regex_set.rs":"ead517110d8ef80e222326d000a4f02b9bd2ce99b58a514ee90b89f0042f6a81","time.rs":"8efe317e7c6b5ba8e0865ce7b49ca775ee8a02590f4241ef62f647fa3c22b68e"},"package":"36d860121800b2a9a94f9b5604b332d5cffb234ce17609ea479d723dbc9d3885"}
+--- firefox-112.0.1.orig/third_party/rust/bindgen/codegen/mod.rs
++++ firefox-112.0.1/third_party/rust/bindgen/codegen/mod.rs
+@@ -116,12 +116,13 @@ fn derives_of_item(
+     item: &Item,
+     ctx: &BindgenContext,
+     packed: bool,
++    forward_decl: bool,
+ ) -> DerivableTraits {
+     let mut derivable_traits = DerivableTraits::empty();
+ 
+     let all_template_params = item.all_template_params(ctx);
+ 
+-    if item.can_derive_copy(ctx) && !item.annotations().disallow_copy() {
++    if item.can_derive_copy(ctx) && !item.annotations().disallow_copy() && !forward_decl {
+         derivable_traits |= DerivableTraits::COPY;
+ 
+         if ctx.options().rust_features().builtin_clone_impls ||
+@@ -963,7 +964,7 @@ impl CodeGenerator for Type {
+                             vec![attributes::repr("transparent")];
+                         let packed = false; // Types can't be packed in Rust.
+                         let derivable_traits =
+-                            derives_of_item(item, ctx, packed);
++                            derives_of_item(item, ctx, packed, false);
+                         if !derivable_traits.is_empty() {
+                             let derives: Vec<_> = derivable_traits.into();
+                             attributes.push(attributes::derives(&derives))
+@@ -2004,8 +2005,9 @@ impl CodeGenerator for CompInfo {
+         }
+ 
+         if forward_decl {
++            let prefix = ctx.trait_prefix();
+             fields.push(quote! {
+-                _unused: [u8; 0],
++                _unused: ::#prefix::cell::UnsafeCell<[u8; 0]>,
+             });
+         }
+ 
+@@ -2067,7 +2069,7 @@ impl CodeGenerator for CompInfo {
+             }
+         }
+ 
+-        let derivable_traits = derives_of_item(item, ctx, packed);
++        let derivable_traits = derives_of_item(item, ctx, packed, self.is_forward_declaration());
+         if !derivable_traits.contains(DerivableTraits::DEBUG) {
+             needs_debug_impl = ctx.options().derive_debug &&
+                 ctx.options().impl_debug &&
+@@ -3109,7 +3111,7 @@ impl CodeGenerator for Enum {
+ 
+         if !variation.is_const() {
+             let packed = false; // Enums can't be packed in Rust.
+-            let mut derives = derives_of_item(item, ctx, packed);
++            let mut derives = derives_of_item(item, ctx, packed, false);
+             // For backwards compat, enums always derive
+             // Clone/Eq/PartialEq/Hash, even if we don't generate those by
+             // default.
diff -uNr a/debian/patches/support-loong64.patch b/debian/patches/support-loong64.patch
--- a/debian/patches/support-loong64.patch	1970-01-01 08:00:00.000000000 +0800
+++ b/debian/patches/support-loong64.patch	2023-06-18 18:55:44.000000000 +0800
@@ -0,0 +1,606 @@
+Description: support loong64
+ patch from https://github.com/loongarchlinux/extra/blob/main/firefox/Add-support-for-LoongArch.patch
+ .
+ firefox (112.0.1-1) unstable; urgency=medium
+ .
+   * New upstream release.
+ .
+   * gfx/thebes/gfxFont.cpp, gfx/thebes/gfxFontEntry.cpp: Don't attempt
+     to use font extents if we didn't get a valid 'head' table, or if
+     it's not an sfnt resource. bz#1827950. Closes: #1034363.
+Author: Mike Hommey <glandium@debian.org>
+Bug-Debian: https://bugs.debian.org/1034363
+
+---
+The information above should follow the Patch Tagging Guidelines, please
+checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
+are templates for supplementary fields that you might want to add:
+
+Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
+Bug: <upstream-bugtracker-url>
+Bug-Debian: https://bugs.debian.org/<bugnumber>
+Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
+Forwarded: (no|not-needed|<patch-forwarded-url>)
+Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
+Reviewed-By: <name and email of someone who approved/reviewed the patch>
+Last-Update: 2023-06-18
+
+--- firefox-112.0.1.orig/ipc/chromium/src/build/build_config.h
++++ firefox-112.0.1/ipc/chromium/src/build/build_config.h
+@@ -125,6 +125,9 @@
+ #elif defined(__riscv) && __riscv_xlen == 64
+ #  define ARCH_CPU_RISCV64 1
+ #  define ARCH_CPU_64_BITS 1
++#elif defined(__loongarch_lp64)
++#  define ARCH_CPU_LOONGARCH64 1
++#  define ARCH_CPU_64_BITS 1
+ #else
+ #  error Please add support for your architecture in build/build_config.h
+ #endif
+--- firefox-112.0.1.orig/js/xpconnect/src/XPCJSContext.cpp
++++ firefox-112.0.1/js/xpconnect/src/XPCJSContext.cpp
+@@ -939,7 +939,7 @@ static void LoadStartupJSPrefs(XPCJSCont
+ #endif
+ 
+ #if !defined(JS_CODEGEN_MIPS32) && !defined(JS_CODEGEN_MIPS64) && \
+-    !defined(JS_CODEGEN_RISCV64)
++    !defined(JS_CODEGEN_RISCV64) && !defined(JS_CODEGEN_LOONG64)
+   JS_SetGlobalJitCompilerOption(
+       cx, JSJITCOMPILER_SPECTRE_INDEX_MASKING,
+       StaticPrefs::javascript_options_spectre_index_masking_DoNotUseDirectly());
+--- firefox-112.0.1.orig/modules/libpref/init/StaticPrefList.yaml
++++ firefox-112.0.1/modules/libpref/init/StaticPrefList.yaml
+@@ -7707,10 +7707,10 @@
+   mirror: always  # LoadStartupJSPrefs
+   do_not_use_directly: true
+ 
+-#if !defined(JS_CODEGEN_MIPS32) && !defined(JS_CODEGEN_MIPS64)
++#if !defined(JS_CODEGEN_MIPS32) && !defined(JS_CODEGEN_MIPS64) && !defined(JS_CODEGEN_LOONG64)
+   # Spectre security vulnerability mitigations for the JS JITs.
+   #
+-  # NOTE: The MIPS backends do not support these mitigations (and generally
++  # NOTE: The MIPS and LoongArch backends do not support these mitigations (and generally
+   #       do not need them). In that case, leave the pref unlisted with its
+   #       default value of false.
+ -   name: javascript.options.spectre.index_masking
+@@ -7742,7 +7742,7 @@
+     value: true
+     mirror: always  # LoadStartupJSPrefs
+     do_not_use_directly: true
+-#endif  // !defined(JS_CODEGEN_MIPSXX)
++#endif  // !defined(JS_CODEGEN_MIPSXX) && !defined(JS_CODEGEN_LOONG64)
+ 
+ # Separate pref to override the values of the Spectre-related prefs above for
+ # isolated web content processes, where we don't need these mitigations.
+--- firefox-112.0.1.orig/third_party/libwebrtc/build/build_config.h
++++ firefox-112.0.1/third_party/libwebrtc/build/build_config.h
+@@ -210,6 +210,10 @@
+ #define ARCH_CPU_SPARC 1
+ #define ARCH_CPU_32_BITS 1
+ #define ARCH_CPU_BIG_ENDIAN 1
++#elif defined(__loongarch_lp64)
++#define ARCH_CPU_LOONGARCH64 1
++#define ARCH_CPU_64_BITS 1
++#define ARCH_CPU_LITTLE_ENDIAN 1
+ #else
+ #error Please add support for your architecture in build/build_config.h
+ #endif
+--- firefox-112.0.1.orig/third_party/rust/authenticator/.cargo-checksum.json
++++ firefox-112.0.1/third_party/rust/authenticator/.cargo-checksum.json
+@@ -1 +1 @@
+-{"files":{"Cargo.lock":"75f6e7b8ef5859ddabf20fb31c5abe41ea2b76001ff2b359d512f728cb289886","Cargo.toml":"ded2f28df2fe8dae02e4f5c20a1a5390fe8721736bbbaf352385f029c878d193","Cross.toml":"8d132da818d48492aa9f4b78a348f0df3adfae45d988d42ebd6be8a5adadb6c3","LICENSE":"e866c8f5864d4cacfe403820e722e9dc03fe3c7565efa5e4dad9051d827bb92a","README.md":"c87d9c7cc44f1dd4ef861a3a9f8cd2eb68aedd3814768871f5fb63c2070806cd","build.rs":"01092254718e4cd5d6bffcd64d55cc3240dc00e79f3d7344a5dc4abf6c27bca6","examples/ctap1.rs":"a2d1a830ae2b3e16088ebf51db271ccee3671b70d94ec4c29890bd76c04eaac0","examples/ctap2.rs":"b91219ee12149945fff57cdd32f5494df85734d0010493edc36516d71636c8d6","examples/ctap2_discoverable_creds.rs":"8b53c46d057b24f477369adb8bf57eaaf0e400aace871e48d56272fdca5c7b14","examples/main.rs":"896d2ffe0889c36852b7ec4d6ad97b61fedc2231432e39fa6c6d87b0147434dc","examples/reset.rs":"be4c29737f356a2a9644d1b5fff0717b6d64a4b6d20d976085b4b165ec2a2377","examples/set_pin.rs":"94e93f170dc232d8fca896b2aa4969afd108428e206db84db7e17f0697fcf837","examples/test_exclude_list.rs":"08a49c900de3fb51de5566e6c4a41b34c77854ad20b6a0e1baf54e625ba8e31b","rustfmt.toml":"ceb6615363d6fff16426eb56f5727f98a7f7ed459ba9af735b1d8b672e2c3b9b","src/authenticatorservice.rs":"35cfca6e3e8258bd012b5e18c79db84ebdfbc3d7a49616ec05eb1d381f7b9c2b","src/capi.rs":"10f574423e52df873558dad25be350d5f23a99d4949b7eadcf91737cd33e3c69","src/consts.rs":"d7b274ec55e56a8d2c150df28e23d72a7379e5bd7257d53d63c2a7b59ab90800","src/crypto/dummy.rs":"3abe45ca14e8b5cb8e2661375d6a8c8ccc333c23577d1c34ec3fce292ef9f2b9","src/crypto/mod.rs":"d2e53a8bc2dc16186fe2c81022133aa8c11d04e7e6adb498778d376bb552c418","src/crypto/nss.rs":"49f23b6b54a046a2273bbd4992164226eb97b683dd37d7b1668e4db1e6d9a984","src/crypto/openssl.rs":"e5fdb8701daedec5b26e727be8ac4200ed27ffa4bea3bfb2b9da1d7e24b53195","src/crypto/ring.rs":"dd93b8bfafd1c35c7f23b66fb4881b884a60c7fcff964ae8966ff260e283b7c2","src/ctap2-capi.h":"bed059ee94251d9f81ed20419f48ae74eae45bec476d28a9aa5bb26aad2d0e8b","src/ctap2/attestation.rs":"e2e638c94ce942ef4cc8afa5f40fccfac98c5bf72a4ce88e46738c7f8f75725c","src/ctap2/client_data.rs":"26465221bdafc615beabdae62709aa6c193504aac3581d4c8f1d7914abe04465","src/ctap2/commands/client_pin.rs":"e49ee05c44e3a366f4bd9f78254f12f895bbb36adbf2c3b58355ddb907a11067","src/ctap2/commands/get_assertion.rs":"4806472e6ef4af00807d06a0a5f61f30110ab5cf258fa131fd6f98c03b7273b8","src/ctap2/commands/get_info.rs":"2e66b6ab18394ef89d3cb65b13ac165b95f1e48a55d3cec9d52a3c5db0ade994","src/ctap2/commands/get_next_assertion.rs":"1120b0301197ada11751c4c42fc0a4147368ec5427f62da3868347567d28ba3a","src/ctap2/commands/get_version.rs":"fba3f73b9d07bedaa1fc3cd7f7ef27b6113e38a1fe6d353cb12f7af73997f5cc","src/ctap2/commands/make_credentials.rs":"f85a8c9507c097ecac94860866cca60dd5ba4035b98d9b776b66f0cc856dd01d","src/ctap2/commands/mod.rs":"9562f5612d466299717f91c3b0a4e52f629a62359a01bd3654048242c605511a","src/ctap2/commands/reset.rs":"95dac8a400f66fb4725a3850a06d6b605ffc99bec4a90ca302a6e8f21deb48d8","src/ctap2/commands/selection.rs":"a2a4b2e30df1923c296f7ac3a8d38cfcac7c231669cfc39babcb7b02fac7cdee","src/ctap2/mod.rs":"672c581502ac6d1417d0fe42a92ef86b1f1d64799f48061b3d9ac026e35fb69d","src/ctap2/server.rs":"0eaefc392a34c84929b6992baecd7abe08521b3e6058e1187656a6fbfb03e9a6","src/ctap2/utils.rs":"ad0aa36a0dbeb510b7f37789329f1957eab206eb529dc083e6176b142984e26e","src/ctap2_capi.rs":"aa116118fc2aa0020f196540b57bce2daf5741ebe9cbf773de0d2916d5c44828","src/errors.rs":"dd5c61fd7a77b6be3875120ae7708bbcf3f4daaf924ae17b67d256a49f326d29","src/lib.rs":"511c78d7c8f89fb56888f16c1517ee2124e58b1392dff7e88652ef4ea0ddab02","src/manager.rs":"2f02ab57fabc5bf47edae1afd357b4600f3f4ec1f556914014d6e562cbfdda0d","src/statecallback.rs":"6b16f97176db1ae3fc3851fe8394e4ffc324bc6fe59313845ac3a88132fd52f1","src/statemachine.rs":"76732b696943e4e2f77170847d24ef3327a207a93bba171a0340cd917b15e37d","src/status_update.rs":"dfa74e57838d25cb6eb594314ce3affaf633a377b462342f0dcb9c528413db1f","src/transport/device_selector.rs":"a3e07b555a2d7ed8ccc7fbc061448e13860bbe069232196bb9825a992378635a","src/transport/errors.rs":"5af7cb8d22ffa63bf4264d182a0f54b9b3a2cc9d19d832b3495857229f9a2875","src/transport/freebsd/device.rs":"0568825a1e07d09fef33b14b7ad1d1702392cba9a12ad18562dd9d396d4cf49b","src/transport/freebsd/mod.rs":"42dcb57fbeb00140003a8ad39acac9b547062b8f281a3fa5deb5f92a6169dde6","src/transport/freebsd/monitor.rs":"a6b34af4dd2e357a5775b1f3a723766107c11ef98dba859b1188ed08e0e450a2","src/transport/freebsd/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/freebsd/uhid.rs":"a194416a8bc5d428c337f8d96a2248769ca190810852bbe5ee686ab595d8eb4c","src/transport/hid.rs":"6bfd64d28568a40b7cb872ed5931df78497543713c0552829ed9c02c60713b73","src/transport/hidproto.rs":"9d490f161807b75f4d7d5096355006627c1f47c0d90fca53bade3692efc92a2d","src/transport/linux/device.rs":"921dfe64c7c6fe8a175b0a6b36d34ff9be95421ef9eb65630678976f96913b7b","src/transport/linux/hidraw.rs":"c7a0df9b4e51cb2736218ffffa02b2b2547b7c515d69f9bae2c9a8c8f1cb547b","src/transport/linux/hidwrapper.h":"72785db3a9b27ea72b6cf13a958fee032af54304522d002f56322473978a20f9","src/transport/linux/hidwrapper.rs":"753c7459dbb73befdd186b6269ac33f7a4537b4c935928f50f2b2131756e787d","src/transport/linux/ioctl_aarch64le.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_armle.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_mips64le.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_mipsbe.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_mipsle.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_powerpc64be.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_powerpc64le.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_powerpcbe.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_riscv64.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_s390xbe.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_x86.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_x86_64.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/mod.rs":"446e435126d2a58f167f648dd95cba28e8ac9c17f1f799e1eaeab80ea800fc57","src/transport/linux/monitor.rs":"5e3ec2618dd74027ae6ca1527991254e3271cce59106d4920ce0414094e22f64","src/transport/linux/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/macos/device.rs":"823162e7514df64b1e11d372fe2b9ba443f46a9ba3326344937d8e6d0c35ee28","src/transport/macos/iokit.rs":"7dc4e7bbf8e42e2fcde0cee8e48d14d6234a5a910bd5d3c4e966d8ba6b73992f","src/transport/macos/mod.rs":"333e561554fc901d4f6092f6e4c85823e2b0c4ff31c9188d0e6d542b71a0a07c","src/transport/macos/monitor.rs":"e02288454bb4010e06b705d82646abddb3799f0cd655f574aa19f9d91485a4a2","src/transport/macos/transaction.rs":"b034104484c6864668425bbd4499540c3117b0de2e80b0b03ee452d00323ed50","src/transport/mock/device.rs":"36ab98fd323a88b45ac460333692f97fe47b74b23e2fbb770cf8a41094d9c795","src/transport/mock/mod.rs":"9c4c87efd19adddc1a91c699a6c328063cfbac5531b76346a5ff92e986aded8f","src/transport/mock/transaction.rs":"be3ed8c389dfa04122364b82515edd76fad6f5d5f72d15cacd45a84fb8397292","src/transport/mod.rs":"ca532b7f262e7bbff844970b92872c07b8cdd0d9035802cd54d6fbb6e51db381","src/transport/netbsd/device.rs":"e194a809f0ab5b7f377e647e11857d38c57355a0b896394bc836abfee36796af","src/transport/netbsd/fd.rs":"5464019025d03ea2a39c82f76b238bbbdb0ea63f5a5fc7c9d974e235139cd53b","src/transport/netbsd/mod.rs":"b1c52aa29537330cebe67427062d6c94871cab2a9b0c04b2305d686f07e88fd5","src/transport/netbsd/monitor.rs":"fb2917e4ba53cc9867987a539061f82d011f4c6e478df1157d965d32df2eb922","src/transport/netbsd/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/netbsd/uhid.rs":"d15be35e2413240066a8f086bb8846b08a6a92bf6a1941c3eec1329dd3a4f9ce","src/transport/openbsd/device.rs":"acbc028ed1eed3bdff13c424baf6015e153f3b7847c2bb7f203c19e253e9950e","src/transport/openbsd/mod.rs":"514274d414042ff84b3667a41a736e78581e22fda87ccc97c2bc05617e381a30","src/transport/openbsd/monitor.rs":"2e0ba6ecc69b450be9cbfd21a7c65036ed2ce593b12363596d3eae0b5bfb79e8","src/transport/openbsd/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/stub/device.rs":"a9d5c42e60a16a5e2b11a5922a8c7b2b47928790e0894fd022c68d766d853721","src/transport/stub/mod.rs":"6a7fec504a52d403b0241b18cd8b95088a31807571f4c0a67e4055afc74f4453","src/transport/stub/transaction.rs":"a3dbea5ccf691cff69278ed8a8ba67d27baba0ea2e1c6a53c9b0b04027283221","src/transport/windows/device.rs":"657019bcf21e9edd7a1e2716dd1ba342532909aae43299b6abfb365a09a53860","src/transport/windows/mod.rs":"218e7f2fe91ecb390c12bba5a5ffdad2c1f0b22861c937f4d386262e5b3dd617","src/transport/windows/monitor.rs":"57fe53862ce1d077811008aedc54f9bbf319adce6834d6e66f53a73760c314ff","src/transport/windows/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/windows/winapi.rs":"ddef8ac42179ec9b56b5b1b76b65779fd8bb09073d400504a16d450e70ad1fc9","src/u2fhid-capi.h":"30e37cbc746b682400fcddcede29527635d122fea01e21413e0b63bb58ba4d75","src/u2fprotocol.rs":"b8c8a71e7a79d61b694039ce31b0657a9e0d7fe2190c18feca09855a1cfa1cbd","src/u2ftypes.rs":"8511c6f04f69670ddd403178a46060644a27128ca4077a9a3e00bc6671e3864b","src/util.rs":"cf37c4c3caf6dde4fc3cf6f5f297ed3c0f13bcb50fb0e8955899fc837483ef31","src/virtualdevices/mod.rs":"2c7df7691d5c150757304241351612aed4260d65b70ab0f483edbc1a5cfb5674","src/virtualdevices/software_u2f.rs":"83e63c0c4a597e71d87b5cd1f33a49646d00b3062edbdd05c51623b80fb60168","src/virtualdevices/webdriver/mod.rs":"4a36e6dfa9f45f941d863b4039bfbcfa8eaca660bd6ed78aeb1a2962db64be5a","src/virtualdevices/webdriver/testtoken.rs":"7146e02f1a5dad2c8827dd11c12ee408c0e42a0706ac65f139998feffd42570f","src/virtualdevices/webdriver/virtualmanager.rs":"7205a0397833628fc0847aa942a6a314dc1e23306858b546053e0de6a360ebe1","src/virtualdevices/webdriver/web_api.rs":"9032525af458b6fe9a3274c36b6ef8c791ecc4ec46d38ae36583fc9a4535b59d","testing/cross/powerpc64le-unknown-linux-gnu.Dockerfile":"d7463ff4376e3e0ca3fed879fab4aa975c4c0a3e7924c5b88aef9381a5d013de","testing/cross/x86_64-unknown-linux-gnu.Dockerfile":"11c79c04b07a171b0c9b63ef75fa75f33263ce76e3c1eda0879a3e723ebd0c24","testing/run_cross.sh":"cc2a7e0359f210eba2e7121f81eb8ab0125cea6e0d0f2698177b0fe2ad0c33d8","webdriver-tools/requirements.txt":"8236aa3dedad886f213c9b778fec80b037212d30e640b458984110211d546005","webdriver-tools/webdriver-driver.py":"82327c26ba271d1689acc87b612ab8436cb5475f0a3c0dba7baa06e7f6f5e19c"},"package":"2238116278e3a069a5148ce1efaa73d750a0d7341e011235a0ddb3e7079cb1be"}
+\ No newline at end of file
++{"files":{"Cargo.lock":"75f6e7b8ef5859ddabf20fb31c5abe41ea2b76001ff2b359d512f728cb289886","Cargo.toml":"ded2f28df2fe8dae02e4f5c20a1a5390fe8721736bbbaf352385f029c878d193","Cross.toml":"8d132da818d48492aa9f4b78a348f0df3adfae45d988d42ebd6be8a5adadb6c3","LICENSE":"e866c8f5864d4cacfe403820e722e9dc03fe3c7565efa5e4dad9051d827bb92a","README.md":"c87d9c7cc44f1dd4ef861a3a9f8cd2eb68aedd3814768871f5fb63c2070806cd","build.rs":"5b909f42e52ed2056afa3693544ef1c1dc5e90d00e7d8730175a228bd0233b43","examples/ctap1.rs":"a2d1a830ae2b3e16088ebf51db271ccee3671b70d94ec4c29890bd76c04eaac0","examples/ctap2.rs":"b91219ee12149945fff57cdd32f5494df85734d0010493edc36516d71636c8d6","examples/ctap2_discoverable_creds.rs":"8b53c46d057b24f477369adb8bf57eaaf0e400aace871e48d56272fdca5c7b14","examples/main.rs":"896d2ffe0889c36852b7ec4d6ad97b61fedc2231432e39fa6c6d87b0147434dc","examples/reset.rs":"be4c29737f356a2a9644d1b5fff0717b6d64a4b6d20d976085b4b165ec2a2377","examples/set_pin.rs":"94e93f170dc232d8fca896b2aa4969afd108428e206db84db7e17f0697fcf837","examples/test_exclude_list.rs":"08a49c900de3fb51de5566e6c4a41b34c77854ad20b6a0e1baf54e625ba8e31b","rustfmt.toml":"ceb6615363d6fff16426eb56f5727f98a7f7ed459ba9af735b1d8b672e2c3b9b","src/authenticatorservice.rs":"35cfca6e3e8258bd012b5e18c79db84ebdfbc3d7a49616ec05eb1d381f7b9c2b","src/capi.rs":"10f574423e52df873558dad25be350d5f23a99d4949b7eadcf91737cd33e3c69","src/consts.rs":"d7b274ec55e56a8d2c150df28e23d72a7379e5bd7257d53d63c2a7b59ab90800","src/crypto/dummy.rs":"3abe45ca14e8b5cb8e2661375d6a8c8ccc333c23577d1c34ec3fce292ef9f2b9","src/crypto/mod.rs":"d2e53a8bc2dc16186fe2c81022133aa8c11d04e7e6adb498778d376bb552c418","src/crypto/nss.rs":"49f23b6b54a046a2273bbd4992164226eb97b683dd37d7b1668e4db1e6d9a984","src/crypto/openssl.rs":"e5fdb8701daedec5b26e727be8ac4200ed27ffa4bea3bfb2b9da1d7e24b53195","src/crypto/ring.rs":"dd93b8bfafd1c35c7f23b66fb4881b884a60c7fcff964ae8966ff260e283b7c2","src/ctap2-capi.h":"bed059ee94251d9f81ed20419f48ae74eae45bec476d28a9aa5bb26aad2d0e8b","src/ctap2/attestation.rs":"e2e638c94ce942ef4cc8afa5f40fccfac98c5bf72a4ce88e46738c7f8f75725c","src/ctap2/client_data.rs":"26465221bdafc615beabdae62709aa6c193504aac3581d4c8f1d7914abe04465","src/ctap2/commands/client_pin.rs":"e49ee05c44e3a366f4bd9f78254f12f895bbb36adbf2c3b58355ddb907a11067","src/ctap2/commands/get_assertion.rs":"4806472e6ef4af00807d06a0a5f61f30110ab5cf258fa131fd6f98c03b7273b8","src/ctap2/commands/get_info.rs":"2e66b6ab18394ef89d3cb65b13ac165b95f1e48a55d3cec9d52a3c5db0ade994","src/ctap2/commands/get_next_assertion.rs":"1120b0301197ada11751c4c42fc0a4147368ec5427f62da3868347567d28ba3a","src/ctap2/commands/get_version.rs":"fba3f73b9d07bedaa1fc3cd7f7ef27b6113e38a1fe6d353cb12f7af73997f5cc","src/ctap2/commands/make_credentials.rs":"f85a8c9507c097ecac94860866cca60dd5ba4035b98d9b776b66f0cc856dd01d","src/ctap2/commands/mod.rs":"9562f5612d466299717f91c3b0a4e52f629a62359a01bd3654048242c605511a","src/ctap2/commands/reset.rs":"95dac8a400f66fb4725a3850a06d6b605ffc99bec4a90ca302a6e8f21deb48d8","src/ctap2/commands/selection.rs":"a2a4b2e30df1923c296f7ac3a8d38cfcac7c231669cfc39babcb7b02fac7cdee","src/ctap2/mod.rs":"672c581502ac6d1417d0fe42a92ef86b1f1d64799f48061b3d9ac026e35fb69d","src/ctap2/server.rs":"0eaefc392a34c84929b6992baecd7abe08521b3e6058e1187656a6fbfb03e9a6","src/ctap2/utils.rs":"ad0aa36a0dbeb510b7f37789329f1957eab206eb529dc083e6176b142984e26e","src/ctap2_capi.rs":"aa116118fc2aa0020f196540b57bce2daf5741ebe9cbf773de0d2916d5c44828","src/errors.rs":"dd5c61fd7a77b6be3875120ae7708bbcf3f4daaf924ae17b67d256a49f326d29","src/lib.rs":"511c78d7c8f89fb56888f16c1517ee2124e58b1392dff7e88652ef4ea0ddab02","src/manager.rs":"2f02ab57fabc5bf47edae1afd357b4600f3f4ec1f556914014d6e562cbfdda0d","src/statecallback.rs":"6b16f97176db1ae3fc3851fe8394e4ffc324bc6fe59313845ac3a88132fd52f1","src/statemachine.rs":"76732b696943e4e2f77170847d24ef3327a207a93bba171a0340cd917b15e37d","src/status_update.rs":"dfa74e57838d25cb6eb594314ce3affaf633a377b462342f0dcb9c528413db1f","src/transport/device_selector.rs":"a3e07b555a2d7ed8ccc7fbc061448e13860bbe069232196bb9825a992378635a","src/transport/errors.rs":"5af7cb8d22ffa63bf4264d182a0f54b9b3a2cc9d19d832b3495857229f9a2875","src/transport/freebsd/device.rs":"0568825a1e07d09fef33b14b7ad1d1702392cba9a12ad18562dd9d396d4cf49b","src/transport/freebsd/mod.rs":"42dcb57fbeb00140003a8ad39acac9b547062b8f281a3fa5deb5f92a6169dde6","src/transport/freebsd/monitor.rs":"a6b34af4dd2e357a5775b1f3a723766107c11ef98dba859b1188ed08e0e450a2","src/transport/freebsd/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/freebsd/uhid.rs":"a194416a8bc5d428c337f8d96a2248769ca190810852bbe5ee686ab595d8eb4c","src/transport/hid.rs":"6bfd64d28568a40b7cb872ed5931df78497543713c0552829ed9c02c60713b73","src/transport/hidproto.rs":"9d490f161807b75f4d7d5096355006627c1f47c0d90fca53bade3692efc92a2d","src/transport/linux/device.rs":"921dfe64c7c6fe8a175b0a6b36d34ff9be95421ef9eb65630678976f96913b7b","src/transport/linux/hidraw.rs":"c7a0df9b4e51cb2736218ffffa02b2b2547b7c515d69f9bae2c9a8c8f1cb547b","src/transport/linux/hidwrapper.h":"72785db3a9b27ea72b6cf13a958fee032af54304522d002f56322473978a20f9","src/transport/linux/hidwrapper.rs":"d203e8804e7632b8d47a224c186d1f431800f04ddc43360d5c086f71e9b0f674","src/transport/linux/ioctl_aarch64le.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_armle.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_mips64le.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_mipsbe.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_mipsle.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_powerpc64be.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_powerpc64le.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_powerpcbe.rs":"fbda309934ad8bda689cd4fb5c0ca696fe26dedb493fe9d5a5322c3047d474fd","src/transport/linux/ioctl_riscv64.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_s390xbe.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_x86.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/ioctl_x86_64.rs":"2d8b265cd39a9f46816f83d5a5df0701c13eb842bc609325bad42ce50add3bf0","src/transport/linux/mod.rs":"446e435126d2a58f167f648dd95cba28e8ac9c17f1f799e1eaeab80ea800fc57","src/transport/linux/monitor.rs":"5e3ec2618dd74027ae6ca1527991254e3271cce59106d4920ce0414094e22f64","src/transport/linux/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/macos/device.rs":"823162e7514df64b1e11d372fe2b9ba443f46a9ba3326344937d8e6d0c35ee28","src/transport/macos/iokit.rs":"7dc4e7bbf8e42e2fcde0cee8e48d14d6234a5a910bd5d3c4e966d8ba6b73992f","src/transport/macos/mod.rs":"333e561554fc901d4f6092f6e4c85823e2b0c4ff31c9188d0e6d542b71a0a07c","src/transport/macos/monitor.rs":"e02288454bb4010e06b705d82646abddb3799f0cd655f574aa19f9d91485a4a2","src/transport/macos/transaction.rs":"b034104484c6864668425bbd4499540c3117b0de2e80b0b03ee452d00323ed50","src/transport/mock/device.rs":"36ab98fd323a88b45ac460333692f97fe47b74b23e2fbb770cf8a41094d9c795","src/transport/mock/mod.rs":"9c4c87efd19adddc1a91c699a6c328063cfbac5531b76346a5ff92e986aded8f","src/transport/mock/transaction.rs":"be3ed8c389dfa04122364b82515edd76fad6f5d5f72d15cacd45a84fb8397292","src/transport/mod.rs":"ca532b7f262e7bbff844970b92872c07b8cdd0d9035802cd54d6fbb6e51db381","src/transport/netbsd/device.rs":"e194a809f0ab5b7f377e647e11857d38c57355a0b896394bc836abfee36796af","src/transport/netbsd/fd.rs":"5464019025d03ea2a39c82f76b238bbbdb0ea63f5a5fc7c9d974e235139cd53b","src/transport/netbsd/mod.rs":"b1c52aa29537330cebe67427062d6c94871cab2a9b0c04b2305d686f07e88fd5","src/transport/netbsd/monitor.rs":"fb2917e4ba53cc9867987a539061f82d011f4c6e478df1157d965d32df2eb922","src/transport/netbsd/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/netbsd/uhid.rs":"d15be35e2413240066a8f086bb8846b08a6a92bf6a1941c3eec1329dd3a4f9ce","src/transport/openbsd/device.rs":"acbc028ed1eed3bdff13c424baf6015e153f3b7847c2bb7f203c19e253e9950e","src/transport/openbsd/mod.rs":"514274d414042ff84b3667a41a736e78581e22fda87ccc97c2bc05617e381a30","src/transport/openbsd/monitor.rs":"2e0ba6ecc69b450be9cbfd21a7c65036ed2ce593b12363596d3eae0b5bfb79e8","src/transport/openbsd/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/stub/device.rs":"a9d5c42e60a16a5e2b11a5922a8c7b2b47928790e0894fd022c68d766d853721","src/transport/stub/mod.rs":"6a7fec504a52d403b0241b18cd8b95088a31807571f4c0a67e4055afc74f4453","src/transport/stub/transaction.rs":"a3dbea5ccf691cff69278ed8a8ba67d27baba0ea2e1c6a53c9b0b04027283221","src/transport/windows/device.rs":"657019bcf21e9edd7a1e2716dd1ba342532909aae43299b6abfb365a09a53860","src/transport/windows/mod.rs":"218e7f2fe91ecb390c12bba5a5ffdad2c1f0b22861c937f4d386262e5b3dd617","src/transport/windows/monitor.rs":"57fe53862ce1d077811008aedc54f9bbf319adce6834d6e66f53a73760c314ff","src/transport/windows/transaction.rs":"bd65fce8864be95839d7918f0fecc065f907265e0ce5411845f409c8e206f9a4","src/transport/windows/winapi.rs":"ddef8ac42179ec9b56b5b1b76b65779fd8bb09073d400504a16d450e70ad1fc9","src/u2fhid-capi.h":"30e37cbc746b682400fcddcede29527635d122fea01e21413e0b63bb58ba4d75","src/u2fprotocol.rs":"b8c8a71e7a79d61b694039ce31b0657a9e0d7fe2190c18feca09855a1cfa1cbd","src/u2ftypes.rs":"8511c6f04f69670ddd403178a46060644a27128ca4077a9a3e00bc6671e3864b","src/util.rs":"cf37c4c3caf6dde4fc3cf6f5f297ed3c0f13bcb50fb0e8955899fc837483ef31","src/virtualdevices/mod.rs":"2c7df7691d5c150757304241351612aed4260d65b70ab0f483edbc1a5cfb5674","src/virtualdevices/software_u2f.rs":"83e63c0c4a597e71d87b5cd1f33a49646d00b3062edbdd05c51623b80fb60168","src/virtualdevices/webdriver/mod.rs":"4a36e6dfa9f45f941d863b4039bfbcfa8eaca660bd6ed78aeb1a2962db64be5a","src/virtualdevices/webdriver/testtoken.rs":"7146e02f1a5dad2c8827dd11c12ee408c0e42a0706ac65f139998feffd42570f","src/virtualdevices/webdriver/virtualmanager.rs":"7205a0397833628fc0847aa942a6a314dc1e23306858b546053e0de6a360ebe1","src/virtualdevices/webdriver/web_api.rs":"9032525af458b6fe9a3274c36b6ef8c791ecc4ec46d38ae36583fc9a4535b59d","testing/cross/powerpc64le-unknown-linux-gnu.Dockerfile":"d7463ff4376e3e0ca3fed879fab4aa975c4c0a3e7924c5b88aef9381a5d013de","testing/cross/x86_64-unknown-linux-gnu.Dockerfile":"11c79c04b07a171b0c9b63ef75fa75f33263ce76e3c1eda0879a3e723ebd0c24","testing/run_cross.sh":"cc2a7e0359f210eba2e7121f81eb8ab0125cea6e0d0f2698177b0fe2ad0c33d8","webdriver-tools/requirements.txt":"8236aa3dedad886f213c9b778fec80b037212d30e640b458984110211d546005","webdriver-tools/webdriver-driver.py":"82327c26ba271d1689acc87b612ab8436cb5475f0a3c0dba7baa06e7f6f5e19c"},"package":"2238116278e3a069a5148ce1efaa73d750a0d7341e011235a0ddb3e7079cb1be"}
+--- firefox-112.0.1.orig/third_party/rust/authenticator/build.rs
++++ firefox-112.0.1/third_party/rust/authenticator/build.rs
+@@ -47,6 +47,8 @@ fn main() {
+         "ioctl_s390xbe.rs"
+     } else if cfg!(all(target_arch = "riscv64", target_endian = "little")) {
+         "ioctl_riscv64.rs"
++    } else if cfg!(all(target_arch = "loongarch64", target_endian = "little")) {
++        "ioctl_loongarch64.rs"
+     } else {
+         panic!("architecture not supported");
+     };
+--- firefox-112.0.1.orig/third_party/rust/authenticator/src/transport/linux/hidwrapper.rs
++++ firefox-112.0.1/third_party/rust/authenticator/src/transport/linux/hidwrapper.rs
+@@ -49,3 +49,6 @@ include!("ioctl_s390xbe.rs");
+ 
+ #[cfg(all(target_arch = "riscv64", target_endian = "little"))]
+ include!("ioctl_riscv64.rs");
++
++#[cfg(all(target_arch = "loongarch64", target_endian = "little"))]
++include!("ioctl_loongarch64.rs");
+--- /dev/null
++++ firefox-112.0.1/third_party/rust/authenticator/src/transport/linux/ioctl_loongarch64.rs
+@@ -0,0 +1,5 @@
++/* automatically generated by rust-bindgen */
++
++pub type __u32 = ::std::os::raw::c_uint;
++pub const _HIDIOCGRDESCSIZE: __u32 = 2147764225;
++pub const _HIDIOCGRDESC: __u32 = 2416199682;
+--- firefox-112.0.1.orig/third_party/rust/cty/.cargo-checksum.json
++++ firefox-112.0.1/third_party/rust/cty/.cargo-checksum.json
+@@ -1 +1 @@
+-{"files":{"CHANGELOG.md":"077c738b5f2c05d66a12209edaabca887091db727d61164a7a414da23d8bf08f","Cargo.toml":"94a517ea6c7dad4634a9a2bd356f3a8035927e7ff8367bd5a975b4db4ccf8e6e","LICENSE-APACHE":"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2","LICENSE-MIT":"035e70219855119df4273b3c5b97543ae82e0dd60c520416e759107c602f651b","README.md":"19687c50697e6abc991e4c35e6d674db56bd5e5ae0d5b833440718f8f154a74d","ci/install.sh":"9b34273d9e79ec59f63d5e3e7aea27b0db66194667f9730a21158740fa1b99f1","ci/script.sh":"54962430ca4d3528e5c0d44ff590b1504be13147db5cbe8bb82f1358528ef5f3","src/lib.rs":"33a38ce6df718fb0191f34ff2cefdcbd3ad9d93f0c4073b78eaf937c07fb7614"},"package":"b365fabc795046672053e29c954733ec3b05e4be654ab130fe8f1f94d7051f35"}
+\ No newline at end of file
++{"files":{"CHANGELOG.md":"077c738b5f2c05d66a12209edaabca887091db727d61164a7a414da23d8bf08f","Cargo.toml":"94a517ea6c7dad4634a9a2bd356f3a8035927e7ff8367bd5a975b4db4ccf8e6e","LICENSE-APACHE":"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2","LICENSE-MIT":"035e70219855119df4273b3c5b97543ae82e0dd60c520416e759107c602f651b","README.md":"19687c50697e6abc991e4c35e6d674db56bd5e5ae0d5b833440718f8f154a74d","ci/install.sh":"9b34273d9e79ec59f63d5e3e7aea27b0db66194667f9730a21158740fa1b99f1","ci/script.sh":"54962430ca4d3528e5c0d44ff590b1504be13147db5cbe8bb82f1358528ef5f3","src/lib.rs":"3e9ec28a0d13cfb47546e044b8fc3a32007f7c76994704c4164c4430a7167e39"},"package":"b365fabc795046672053e29c954733ec3b05e4be654ab130fe8f1f94d7051f35"}
+--- firefox-112.0.1.orig/third_party/rust/cty/src/lib.rs
++++ firefox-112.0.1/third_party/rust/cty/src/lib.rs
+@@ -24,6 +24,7 @@ pub use pwd::*;
+           target_arch = "powerpc",
+           target_arch = "powerpc64",
+           target_arch = "s390x",
++          target_arch = "loongarch64",
+           target_arch = "riscv32",
+           target_arch = "riscv64"))]
+ mod ad {
+--- firefox-112.0.1.orig/third_party/rust/nix/.cargo-checksum.json
++++ firefox-112.0.1/third_party/rust/nix/.cargo-checksum.json
+@@ -1 +1 @@
+-{"files":{"CHANGELOG.md":"b11b7bc8ef50b261f8f6de922591212436d8d7c40746c2e6984df3885a91629e","Cargo.toml":"f8cd7e0bd5c43f7f55ef56cdcda2916ffeb5db7497b49bb73d1516b2c84e9ebc","LICENSE":"66e3ee1fa7f909ad3c612d556f2a0cdabcd809ad6e66f3b0605015ac64841b70","README.md":"0bbe5a44884e8315d018df67c691cb57d059a30c3f3dd221beb3eee56cb5cf1f","src/dir.rs":"dd5f9ee16c5daad44700fb7e3b8b09a32006f3efc394a51fec97aa3e9a8b316e","src/env.rs":"028bc5e20139ebba418a655a2978a53335dc7680bf1de43d2c8333dd72cfa5c4","src/errno.rs":"190812028a266c587ad54bf942bd821af8d796e9399276c7fd7c93f0d52793ae","src/fcntl.rs":"ea8f43d8fec0b6c3b7d903333e4c1ce85611684a4afd561c55cfe4b61a979e94","src/features.rs":"1e1e0247662466f6998d3a405c8742ce807fce3a27823575bd235e771c2392ac","src/ifaddrs.rs":"9500e10bed93ca6e376c3877b448b42c51ed27d1d67693e819bfb175fa768012","src/kmod.rs":"9031edb7b0a8ed1d6635163c9c32490537d5c204e9794cce9dc2db24ead60957","src/lib.rs":"1384fe677c3a53b48b3d4c41a91ade3611b2751cdd35a0712b3237d20be393fe","src/macros.rs":"e23d7d8be22ef0bf9febaaf2739585453103607c0139bd3995a324e4a16d011e","src/mount/bsd.rs":"114878b4f2ad712236965fc3ed227d37ea56f57156266709b526002c5b65aa6e","src/mount/linux.rs":"d938612abe89d2cf0d375b335a570ba4831f2009d3ef6c7e786ccbc398bf2c15","src/mount/mod.rs":"5c9d906d4760ac1a3767949e2cab69d7fa683c454c06045919c58a90689d439f","src/mqueue.rs":"8e227acb520020b06338bceb8e7e11705564e5f4d96ab51e0815dcadc01a8b4e","src/net/if_.rs":"74dcfa81b1b77303cd8047ca4e2ab60b8fcebaa4a01dc860dd0fec65ab334eb4","src/net/mod.rs":"577f70170e53d4a6de1abb70bf8f1031ec3e65c0e63ef5fcf05c907125e7ac17","src/poll.rs":"cae2182481438f27e14e4c1a88e1835ff371423c0cc8f685ffb0b479dd102e2e","src/pty.rs":"e94219e1981cb023d4f3c22edbe26c87f7508fa25b96b9f74b3b36436aebe2fb","src/sched.rs":"22ba33ee394ef23fbde7d1fca1f2f24fc487dd447b7c28d82c9165a0822b2894","src/sys/aio.rs":"9181e01eeef5ff6f89dec1eca58ba814a80df72736b955cd1b92278d5c79bea6","src/sys/epoll.rs":"6d9bcd668010ba26abb9c5ede9f3e238a56ce4949a5c51ee80853fc8e3c37607","src/sys/event.rs":"d69b7b86bed60d7bf609c636545a5d92f7f9ece7fd69db0e662f6d7e57f3237c","src/sys/eventfd.rs":"bc8009f19e8b93b03d0202896e10bd08497f34e2987bb8ce864d6cde11eab892","src/sys/inotify.rs":"215c4217f698b47f73f4418f98f331f06ca93d35e01c6f522e5fa6a156554174","src/sys/ioctl/bsd.rs":"bbd02e30b0a78c1cb22777d9b00cfcbba9c68505cffc06118ac68474cf6fea39","src/sys/ioctl/linux.rs":"028181834d119b834bf399f2b8a6176cc57e75144693f28f32059d087d8c8018","src/sys/ioctl/mod.rs":"89b20579476b2e0254e0ecb1b41830cccd7027a22cbdb816a9d4ec3924842ac1","src/sys/memfd.rs":"72a153df4da17ea0cc4ce90ee3c47c5bec24c6e32fbb4ee7c77c1a89d79efbdd","src/sys/mman.rs":"cf4970c2ec4eb668926267679bfb7b41e653190f719d7bd1ef768623e53117a3","src/sys/mod.rs":"1be43a6d0d40661851f222b305841555897168b7e75bd9bc9c7f1962bba93369","src/sys/personality.rs":"99677190a5a81e07fc2c5c2e4b9abacf0fd555776dd0eb266fa86b8f9e965dbf","src/sys/pthread.rs":"258cdf7ff0b61a4afa6d228109e4cb4fb88d859bb8dfe6c959d95130fb010906","src/sys/ptrace/bsd.rs":"ca948c863fa55de1f9fc8eabd9fd7803054df08a6ee5044b2a6a7de49a321819","src/sys/ptrace/linux.rs":"ca780ecf61416252e45dd10b5ffa6120c65b22ec4362d4f2fbd554a9bcaf1084","src/sys/ptrace/mod.rs":"671a6ccac955e75d5998f7e53ffc45ed4c7b6522a0f24a0937d60141f692dd39","src/sys/quota.rs":"d3127892f419939d63f75b9326d50e0866f7bdd92c9dcbd1cb3b6890a13b016c","src/sys/reboot.rs":"dbb1faeeb6525f1952a20cb75adbd76b0681b6214501f747cc154be2bbff7594","src/sys/resource.rs":"ee83c0a39e600c496e62592b65f8ca67c761ff9f00f30bb4bfd5cd5897281dad","src/sys/select.rs":"d30e8dfcfa46f6bd8d8b86676ad09d7aa6f1d7747d2c9601b9bb4f5ccf44b59f","src/sys/sendfile.rs":"637b09a267813c6adf72b6b74235175ed5347e3816777881ba8a9ab192c3e497","src/sys/signal.rs":"485c85a0d24a20ecf13c1d35ed740ee40498d9067cb3c0228f63323f89ba4de5","src/sys/signalfd.rs":"309eb1be7d72e8391acb5ba82b07cd6cf6fb26ddb3af914373f8889add6f52dd","src/sys/socket/addr.rs":"bda779dcb72777282a0d80ac53b7bbac49b4d3aa24c6af71c182522744b1424a","src/sys/socket/mod.rs":"0338e7922696da25e3fb3bdf487ba7ed44b0fcef382c2cccd5cf39d38046786e","src/sys/socket/sockopt.rs":"2c0ccd6aa1eb5d06057813f5098ff8541a4001eb634a5f3db888d8d4d802cd5e","src/sys/stat.rs":"a7b30aa54033579aea16af4c904b3935c3816a72615537178ad6366b6c8cb381","src/sys/statfs.rs":"4cb48cbfe45b74f706bdf85e9b4e8a8dc1c1ac36d8ff77d6fc065dc8de7da9f5","src/sys/statvfs.rs":"1e17f417675722690354e03184de9b9bfc1ba4367d2dc5446952ed71f67a0270","src/sys/sysinfo.rs":"b4519b1ca091c9dbe94d2a6fd6304944bf3df5626973d2c6884022559706f0d9","src/sys/termios.rs":"484bb987e35064e4483c0cd3074400e1635b793e4aa50c14eaed4baafed4fefc","src/sys/time.rs":"4ccd06e22757a52b25d407d7a58faca8e686871f13c637f665e8ea5b1ae05d8f","src/sys/timer.rs":"5bf5068e3fe0050e7b79ed674569682c57f77bd24581ea7c7d58747989343c37","src/sys/timerfd.rs":"ee960c8475d26f01edbbeebcc8e5104a91d028d95aeec1de9d73f3f779130bb8","src/sys/uio.rs":"5824d6167065f8d5db552d1a5f86ef08ef661cd278b7d636baafc0b62d752ad4","src/sys/utsname.rs":"7f1c75dd550c9637a023a4629df571bcd292d53feee7b18f9f80dce425e65bea","src/sys/wait.rs":"5b21039400633d85aa49e153cc927cbf32d05df33c1d6a365921af2432b9495d","src/time.rs":"63ae33f73c79a70c811f87af2edd34e21ce93a3f89b3f176e35065fa1ece3ad7","src/ucontext.rs":"863d783443be1307477daf1970a42594d17d637aba94c8e5b63d5d9a49ea624b","src/unistd.rs":"02b107acc17e4078675dc330866abbe1395a257ef082803816d2e589248af267","test/common/mod.rs":"1d7e28e3635754664cd056f3a1079232ff5c118df619e1d0551a9972eb0b3cd6","test/sys/mod.rs":"87b2891d83067ff21f72b8ff7fde3019dc45b6877282ac278b6da151de45c7a7","test/sys/test_aio.rs":"d2d9e9eb67a1075e43321413666a47195a03b84adf4faf235785e5d0b9158d50","test/sys/test_aio_drop.rs":"614070155fa16a979b7341d001639c5ce24a1d6f632c3abce45a5a6d49c4039b","test/sys/test_epoll.rs":"ffe95e36c79e37426ef8e8ca3b137b7f35ea0333ce666a20a4b7878db17680e9","test/sys/test_inotify.rs":"a141b9a995892547b51ceeb6761a70a6b86d37e8f38d13ea2c497b81b4b0f49f","test/sys/test_ioctl.rs":"00ccc5afb665e533a0a4b6d6a6be438bcaea19fce335390feef4e91d17b3036c","test/sys/test_mman.rs":"f66da7990aea0b61f6e1c006fcd31389a42fa2f0ce6fdb7b02dfe314a533e32d","test/sys/test_pthread.rs":"ace36a2f5587f1874854281b4fd84e4e4d892a1e3c5cc38ced57975739522ad6","test/sys/test_ptrace.rs":"0385eebc8b1b8c72f655b745769decd9143ad83018198375982da0896310456b","test/sys/test_select.rs":"54cea1c34ad28d5770a613c1c3cbc3b1064b22037ec2b9d3fcd422d3be9e60a7","test/sys/test_signal.rs":"acc9941227bd3e2afad323613c2b8c83902ed0486d3745fd72704f395924f1e4","test/sys/test_signalfd.rs":"0e1060143e2612c490bc3d0168d0bbb042ef55e3f1d91d2578b9e42e4310a14d","test/sys/test_socket.rs":"9e86d4c15f256154f2626e663163ce823645f2934dc97edd6fc99a5f1df9164f","test/sys/test_sockopt.rs":"4cd62c722ff39624cadf4abb03c47bdd8f5f471d5d410022057966e6fa29321f","test/sys/test_stat.rs":"6630a28217fd708bb84cd4f7e7101836b74f2420f9888923fdab664ccc331c1d","test/sys/test_sysinfo.rs":"ffd49bc96375914a2c4a4a59730cae8072f85771e2c4a80d3403df38d967e272","test/sys/test_termios.rs":"e5bcef10c84bd7583d600d5601835bcb3cfc88781cb283ab0185bbef5faf4327","test/sys/test_timerfd.rs":"cfed3abf58118611d08f6985251a7739cff67108e11214222a1d2394a3a026ce","test/sys/test_uio.rs":"32656bd0a5699e4d019aa928edf104637937179782914a82d50d37226e84c421","test/sys/test_wait.rs":"6fd59fffeeb09ff620c359baefd062ba777598982b6cb001ccc07b6bc7605493","test/test.rs":"9f43d5001eefe1fe85ce20c4dab24474296a76d127dc25b39b4d8bd8798be45c","test/test_clearenv.rs":"45ca548035b3c20ec87314715feaba2be973709a635d85b8cde46fd1d9f1ecd4","test/test_dir.rs":"ae3c11c58cb06da6557aa2a839c6653c54cd7724283fffe9df5a5d3feabdd89a","test/test_fcntl.rs":"75febe19a7fb19063db75b012fc17feb264a8796569d9cc18c313da2c2cce806","test/test_kmod/hello_mod/Makefile":"0219f7bce0603f97d997fb377ca071966c90333ecc665e78a54dfeb97a9c811b","test/test_kmod/hello_mod/hello.c":"bcac6b19c5bd807e1f3878c15e426acc85785a8ade9840c3bb4d068635c9188c","test/test_kmod/mod.rs":"b4ae25841c2f06f32de9f1acd8230eeccd7095721302ebe78ad454e4e4f9c783","test/test_mount.rs":"6dd242b6e23c9c39e1a75612bbea62573898818ab374c3c032c2cdb97033554d","test/test_mq.rs":"136071f24131aac0e65d5f29ac18e3806641dfae1164813f5570c0e3a6f70553","test/test_net.rs":"f2912327ebb2a3d37e6cff02a5ac3106cf889cc5c74404db4ef0034059ba26f1","test/test_nix_path.rs":"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b","test/test_nmount.rs":"d6c112547bb80968170b5497cda4b6cbf69dabec6f51d494bd52298995ceff18","test/test_poll.rs":"3e0b8f0397ba080785c61a3bfc3d637bc87f324bc4e52b5f1bf3ca0d32dbc9fe","test/test_pty.rs":"b26238a0783746cb31880e11eebc1913149be999ce75fbc2d6677bdd1e2731b2","test/test_ptymaster_drop.rs":"ae63c815f5028ddc67d194e86559483018ab1816316bdb917f40cee9364fd8a5","test/test_resource.rs":"40aef790ab745cec31a4b333d2ca406b462aa9bdf4a6d3756371e498b8d51e9a","test/test_sched.rs":"d2c8065cbec77d25230f03683dfde99828c0fa463969a5a8f50ebf913091d6bc","test/test_sendfile.rs":"bb41b4f3621b518e397d3a5b5ad3c5dcef3fe506afe516eab7572fbab92b77e3","test/test_stat.rs":"c407ca47a5258750076d041afad2f6add4c3563be36628bde1c5b314f5d0765d","test/test_time.rs":"f7a21b1e279e60e84909d5dadda97ded66d3326b131fe317badf9af0a1b50335","test/test_timer.rs":"3ae20d364f075d2811f3ff94eda9886682cc21d8807656007d2464fe36d1e361","test/test_unistd.rs":"214d5edf633685b7911d103d86d7e0325a9e448f3a27b56f50c7714eddb5e547"},"package":"f346ff70e7dbfd675fe90590b92d59ef2de15a8779ae305ebcbfd3f0caf59be4"}
+\ No newline at end of file
++{"files":{"CHANGELOG.md":"b11b7bc8ef50b261f8f6de922591212436d8d7c40746c2e6984df3885a91629e","Cargo.toml":"f8cd7e0bd5c43f7f55ef56cdcda2916ffeb5db7497b49bb73d1516b2c84e9ebc","LICENSE":"66e3ee1fa7f909ad3c612d556f2a0cdabcd809ad6e66f3b0605015ac64841b70","README.md":"0bbe5a44884e8315d018df67c691cb57d059a30c3f3dd221beb3eee56cb5cf1f","src/dir.rs":"dd5f9ee16c5daad44700fb7e3b8b09a32006f3efc394a51fec97aa3e9a8b316e","src/env.rs":"028bc5e20139ebba418a655a2978a53335dc7680bf1de43d2c8333dd72cfa5c4","src/errno.rs":"190812028a266c587ad54bf942bd821af8d796e9399276c7fd7c93f0d52793ae","src/fcntl.rs":"ea8f43d8fec0b6c3b7d903333e4c1ce85611684a4afd561c55cfe4b61a979e94","src/features.rs":"1e1e0247662466f6998d3a405c8742ce807fce3a27823575bd235e771c2392ac","src/ifaddrs.rs":"9500e10bed93ca6e376c3877b448b42c51ed27d1d67693e819bfb175fa768012","src/kmod.rs":"9031edb7b0a8ed1d6635163c9c32490537d5c204e9794cce9dc2db24ead60957","src/lib.rs":"1384fe677c3a53b48b3d4c41a91ade3611b2751cdd35a0712b3237d20be393fe","src/macros.rs":"e23d7d8be22ef0bf9febaaf2739585453103607c0139bd3995a324e4a16d011e","src/mount/bsd.rs":"114878b4f2ad712236965fc3ed227d37ea56f57156266709b526002c5b65aa6e","src/mount/linux.rs":"d938612abe89d2cf0d375b335a570ba4831f2009d3ef6c7e786ccbc398bf2c15","src/mount/mod.rs":"5c9d906d4760ac1a3767949e2cab69d7fa683c454c06045919c58a90689d439f","src/mqueue.rs":"8e227acb520020b06338bceb8e7e11705564e5f4d96ab51e0815dcadc01a8b4e","src/net/if_.rs":"74dcfa81b1b77303cd8047ca4e2ab60b8fcebaa4a01dc860dd0fec65ab334eb4","src/net/mod.rs":"577f70170e53d4a6de1abb70bf8f1031ec3e65c0e63ef5fcf05c907125e7ac17","src/poll.rs":"cae2182481438f27e14e4c1a88e1835ff371423c0cc8f685ffb0b479dd102e2e","src/pty.rs":"e94219e1981cb023d4f3c22edbe26c87f7508fa25b96b9f74b3b36436aebe2fb","src/sched.rs":"22ba33ee394ef23fbde7d1fca1f2f24fc487dd447b7c28d82c9165a0822b2894","src/sys/aio.rs":"9181e01eeef5ff6f89dec1eca58ba814a80df72736b955cd1b92278d5c79bea6","src/sys/epoll.rs":"6d9bcd668010ba26abb9c5ede9f3e238a56ce4949a5c51ee80853fc8e3c37607","src/sys/event.rs":"d69b7b86bed60d7bf609c636545a5d92f7f9ece7fd69db0e662f6d7e57f3237c","src/sys/eventfd.rs":"bc8009f19e8b93b03d0202896e10bd08497f34e2987bb8ce864d6cde11eab892","src/sys/inotify.rs":"215c4217f698b47f73f4418f98f331f06ca93d35e01c6f522e5fa6a156554174","src/sys/ioctl/bsd.rs":"bbd02e30b0a78c1cb22777d9b00cfcbba9c68505cffc06118ac68474cf6fea39","src/sys/ioctl/linux.rs":"54bad026ee637b73b95dad8135b6db61cae855670fd9323e7bf21acaff0827f4","src/sys/ioctl/mod.rs":"89b20579476b2e0254e0ecb1b41830cccd7027a22cbdb816a9d4ec3924842ac1","src/sys/memfd.rs":"72a153df4da17ea0cc4ce90ee3c47c5bec24c6e32fbb4ee7c77c1a89d79efbdd","src/sys/mman.rs":"cf4970c2ec4eb668926267679bfb7b41e653190f719d7bd1ef768623e53117a3","src/sys/mod.rs":"1be43a6d0d40661851f222b305841555897168b7e75bd9bc9c7f1962bba93369","src/sys/personality.rs":"99677190a5a81e07fc2c5c2e4b9abacf0fd555776dd0eb266fa86b8f9e965dbf","src/sys/pthread.rs":"258cdf7ff0b61a4afa6d228109e4cb4fb88d859bb8dfe6c959d95130fb010906","src/sys/ptrace/bsd.rs":"ca948c863fa55de1f9fc8eabd9fd7803054df08a6ee5044b2a6a7de49a321819","src/sys/ptrace/linux.rs":"ca780ecf61416252e45dd10b5ffa6120c65b22ec4362d4f2fbd554a9bcaf1084","src/sys/ptrace/mod.rs":"671a6ccac955e75d5998f7e53ffc45ed4c7b6522a0f24a0937d60141f692dd39","src/sys/quota.rs":"d3127892f419939d63f75b9326d50e0866f7bdd92c9dcbd1cb3b6890a13b016c","src/sys/reboot.rs":"dbb1faeeb6525f1952a20cb75adbd76b0681b6214501f747cc154be2bbff7594","src/sys/resource.rs":"ee83c0a39e600c496e62592b65f8ca67c761ff9f00f30bb4bfd5cd5897281dad","src/sys/select.rs":"d30e8dfcfa46f6bd8d8b86676ad09d7aa6f1d7747d2c9601b9bb4f5ccf44b59f","src/sys/sendfile.rs":"637b09a267813c6adf72b6b74235175ed5347e3816777881ba8a9ab192c3e497","src/sys/signal.rs":"485c85a0d24a20ecf13c1d35ed740ee40498d9067cb3c0228f63323f89ba4de5","src/sys/signalfd.rs":"309eb1be7d72e8391acb5ba82b07cd6cf6fb26ddb3af914373f8889add6f52dd","src/sys/socket/addr.rs":"bda779dcb72777282a0d80ac53b7bbac49b4d3aa24c6af71c182522744b1424a","src/sys/socket/mod.rs":"0338e7922696da25e3fb3bdf487ba7ed44b0fcef382c2cccd5cf39d38046786e","src/sys/socket/sockopt.rs":"2c0ccd6aa1eb5d06057813f5098ff8541a4001eb634a5f3db888d8d4d802cd5e","src/sys/stat.rs":"a7b30aa54033579aea16af4c904b3935c3816a72615537178ad6366b6c8cb381","src/sys/statfs.rs":"4cb48cbfe45b74f706bdf85e9b4e8a8dc1c1ac36d8ff77d6fc065dc8de7da9f5","src/sys/statvfs.rs":"1e17f417675722690354e03184de9b9bfc1ba4367d2dc5446952ed71f67a0270","src/sys/sysinfo.rs":"b4519b1ca091c9dbe94d2a6fd6304944bf3df5626973d2c6884022559706f0d9","src/sys/termios.rs":"484bb987e35064e4483c0cd3074400e1635b793e4aa50c14eaed4baafed4fefc","src/sys/time.rs":"4ccd06e22757a52b25d407d7a58faca8e686871f13c637f665e8ea5b1ae05d8f","src/sys/timer.rs":"5bf5068e3fe0050e7b79ed674569682c57f77bd24581ea7c7d58747989343c37","src/sys/timerfd.rs":"ee960c8475d26f01edbbeebcc8e5104a91d028d95aeec1de9d73f3f779130bb8","src/sys/uio.rs":"5824d6167065f8d5db552d1a5f86ef08ef661cd278b7d636baafc0b62d752ad4","src/sys/utsname.rs":"7f1c75dd550c9637a023a4629df571bcd292d53feee7b18f9f80dce425e65bea","src/sys/wait.rs":"5b21039400633d85aa49e153cc927cbf32d05df33c1d6a365921af2432b9495d","src/time.rs":"63ae33f73c79a70c811f87af2edd34e21ce93a3f89b3f176e35065fa1ece3ad7","src/ucontext.rs":"863d783443be1307477daf1970a42594d17d637aba94c8e5b63d5d9a49ea624b","src/unistd.rs":"02b107acc17e4078675dc330866abbe1395a257ef082803816d2e589248af267","test/common/mod.rs":"1d7e28e3635754664cd056f3a1079232ff5c118df619e1d0551a9972eb0b3cd6","test/sys/mod.rs":"87b2891d83067ff21f72b8ff7fde3019dc45b6877282ac278b6da151de45c7a7","test/sys/test_aio.rs":"d2d9e9eb67a1075e43321413666a47195a03b84adf4faf235785e5d0b9158d50","test/sys/test_aio_drop.rs":"614070155fa16a979b7341d001639c5ce24a1d6f632c3abce45a5a6d49c4039b","test/sys/test_epoll.rs":"ffe95e36c79e37426ef8e8ca3b137b7f35ea0333ce666a20a4b7878db17680e9","test/sys/test_inotify.rs":"a141b9a995892547b51ceeb6761a70a6b86d37e8f38d13ea2c497b81b4b0f49f","test/sys/test_ioctl.rs":"00ccc5afb665e533a0a4b6d6a6be438bcaea19fce335390feef4e91d17b3036c","test/sys/test_mman.rs":"f66da7990aea0b61f6e1c006fcd31389a42fa2f0ce6fdb7b02dfe314a533e32d","test/sys/test_pthread.rs":"ace36a2f5587f1874854281b4fd84e4e4d892a1e3c5cc38ced57975739522ad6","test/sys/test_ptrace.rs":"0385eebc8b1b8c72f655b745769decd9143ad83018198375982da0896310456b","test/sys/test_select.rs":"54cea1c34ad28d5770a613c1c3cbc3b1064b22037ec2b9d3fcd422d3be9e60a7","test/sys/test_signal.rs":"acc9941227bd3e2afad323613c2b8c83902ed0486d3745fd72704f395924f1e4","test/sys/test_signalfd.rs":"0e1060143e2612c490bc3d0168d0bbb042ef55e3f1d91d2578b9e42e4310a14d","test/sys/test_socket.rs":"9e86d4c15f256154f2626e663163ce823645f2934dc97edd6fc99a5f1df9164f","test/sys/test_sockopt.rs":"4cd62c722ff39624cadf4abb03c47bdd8f5f471d5d410022057966e6fa29321f","test/sys/test_stat.rs":"6630a28217fd708bb84cd4f7e7101836b74f2420f9888923fdab664ccc331c1d","test/sys/test_sysinfo.rs":"ffd49bc96375914a2c4a4a59730cae8072f85771e2c4a80d3403df38d967e272","test/sys/test_termios.rs":"e5bcef10c84bd7583d600d5601835bcb3cfc88781cb283ab0185bbef5faf4327","test/sys/test_timerfd.rs":"cfed3abf58118611d08f6985251a7739cff67108e11214222a1d2394a3a026ce","test/sys/test_uio.rs":"32656bd0a5699e4d019aa928edf104637937179782914a82d50d37226e84c421","test/sys/test_wait.rs":"6fd59fffeeb09ff620c359baefd062ba777598982b6cb001ccc07b6bc7605493","test/test.rs":"9f43d5001eefe1fe85ce20c4dab24474296a76d127dc25b39b4d8bd8798be45c","test/test_clearenv.rs":"45ca548035b3c20ec87314715feaba2be973709a635d85b8cde46fd1d9f1ecd4","test/test_dir.rs":"ae3c11c58cb06da6557aa2a839c6653c54cd7724283fffe9df5a5d3feabdd89a","test/test_fcntl.rs":"75febe19a7fb19063db75b012fc17feb264a8796569d9cc18c313da2c2cce806","test/test_kmod/hello_mod/Makefile":"0219f7bce0603f97d997fb377ca071966c90333ecc665e78a54dfeb97a9c811b","test/test_kmod/hello_mod/hello.c":"bcac6b19c5bd807e1f3878c15e426acc85785a8ade9840c3bb4d068635c9188c","test/test_kmod/mod.rs":"b4ae25841c2f06f32de9f1acd8230eeccd7095721302ebe78ad454e4e4f9c783","test/test_mount.rs":"6dd242b6e23c9c39e1a75612bbea62573898818ab374c3c032c2cdb97033554d","test/test_mq.rs":"136071f24131aac0e65d5f29ac18e3806641dfae1164813f5570c0e3a6f70553","test/test_net.rs":"f2912327ebb2a3d37e6cff02a5ac3106cf889cc5c74404db4ef0034059ba26f1","test/test_nix_path.rs":"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b","test/test_nmount.rs":"d6c112547bb80968170b5497cda4b6cbf69dabec6f51d494bd52298995ceff18","test/test_poll.rs":"3e0b8f0397ba080785c61a3bfc3d637bc87f324bc4e52b5f1bf3ca0d32dbc9fe","test/test_pty.rs":"b26238a0783746cb31880e11eebc1913149be999ce75fbc2d6677bdd1e2731b2","test/test_ptymaster_drop.rs":"ae63c815f5028ddc67d194e86559483018ab1816316bdb917f40cee9364fd8a5","test/test_resource.rs":"40aef790ab745cec31a4b333d2ca406b462aa9bdf4a6d3756371e498b8d51e9a","test/test_sched.rs":"d2c8065cbec77d25230f03683dfde99828c0fa463969a5a8f50ebf913091d6bc","test/test_sendfile.rs":"bb41b4f3621b518e397d3a5b5ad3c5dcef3fe506afe516eab7572fbab92b77e3","test/test_stat.rs":"c407ca47a5258750076d041afad2f6add4c3563be36628bde1c5b314f5d0765d","test/test_time.rs":"f7a21b1e279e60e84909d5dadda97ded66d3326b131fe317badf9af0a1b50335","test/test_timer.rs":"3ae20d364f075d2811f3ff94eda9886682cc21d8807656007d2464fe36d1e361","test/test_unistd.rs":"214d5edf633685b7911d103d86d7e0325a9e448f3a27b56f50c7714eddb5e547"},"package":"f346ff70e7dbfd675fe90590b92d59ef2de15a8779ae305ebcbfd3f0caf59be4"}
+--- firefox-112.0.1.orig/third_party/rust/nix/src/sys/ioctl/linux.rs
++++ firefox-112.0.1/third_party/rust/nix/src/sys/ioctl/linux.rs
+@@ -41,6 +41,7 @@ mod consts {
+     target_arch = "s390x",
+     target_arch = "x86_64",
+     target_arch = "aarch64",
++    target_arch = "loongarch64",
+     target_arch = "riscv32",
+     target_arch = "riscv64"
+ ))]
+--- firefox-112.0.1.orig/toolkit/components/telemetry/pingsender/pingsender.cpp
++++ firefox-112.0.1/toolkit/components/telemetry/pingsender/pingsender.cpp
+@@ -10,6 +10,7 @@
+ #include <fstream>
+ #include <iomanip>
+ #include <string>
++#include <cstdint>
+ #include <vector>
+ 
+ #include <zlib.h>
+--- firefox-112.0.1.orig/toolkit/moz.configure
++++ firefox-112.0.1/toolkit/moz.configure
+@@ -2220,7 +2220,7 @@ with only_when(compile_environment | art
+                 use_nasm = False
+         elif target.cpu == "x86_64":
+             flags = ["-D__x86_64__", "-DPIC", "-DELF", "-Pconfig_unix64.asm"]
+-        elif target.cpu in ("x86", "arm", "aarch64"):
++        elif target.cpu in ("x86", "arm", "aarch64", "loongarch64"):
+             flac_only = True
+         else:
+             enable = False
+--- firefox-112.0.1.orig/xpcom/reflect/xptcall/md/unix/moz.build
++++ firefox-112.0.1/xpcom/reflect/xptcall/md/unix/moz.build
+@@ -276,6 +276,14 @@ if CONFIG["OS_ARCH"] == "Linux" and CONF
+         "xptcstubs_riscv64.cpp",
+     ]
+ 
++if CONFIG["OS_ARCH"] == "Linux" and CONFIG["CPU_ARCH"] == "loongarch64":
++    SOURCES += [
++        "xptcinvoke_asm_loongarch64.S",
++        "xptcinvoke_loongarch64.cpp",
++        "xptcstubs_asm_loongarch64.S",
++        "xptcstubs_loongarch64.cpp",
++    ]
++
+ FINAL_LIBRARY = "xul"
+ 
+ LOCAL_INCLUDES += [
+--- /dev/null
++++ firefox-112.0.1/xpcom/reflect/xptcall/md/unix/xptcinvoke_asm_loongarch64.S
+@@ -0,0 +1,92 @@
++/* This Source Code Form subject to the terms of Mozilla Public
++ * License, v. 2.0 If a copy of the MPL was not distributed with
++ * this file, You can obtain one at http://mozilla.org/MPL/2.0/.
++ */
++
++  .set NGPREGS, 8
++  .set NFPREGS, 8
++
++  .text
++  .globl  _NS_InvokeByIndex
++  .type   _NS_InvokeByIndex, @function
++/*
++ * _NS_InvokeByIndex(nsISupports* that, uint32_t methodIndex,
++ *                   uint32_t paramCount, nsXPTCVariant* params)
++ */
++_NS_InvokeByIndex:
++  .cfi_startproc
++  addi.d    $sp, $sp, -32
++  .cfi_def_cfa_offset 32
++  st.d      $s0, $sp, 16
++  .cfi_offset 23, -16
++  st.d      $s1, $sp, 8
++  .cfi_offset 24, -24
++  st.d      $s2, $sp, 0
++  .cfi_offset 25, -32
++  st.d      $ra, $sp, 24
++  .cfi_offset 1, -8
++  
++  move      $s2, $a0
++  move      $s1, $a1
++  move      $s0, $sp
++  .cfi_def_cfa_register 23
++
++  /* 16-bytes alignment */
++  addi.d    $a0, $a2, 1
++  li.d      $t4, 0xfffffffffffffffe
++  and       $a0, $a0, $t4
++  slli.d    $a0, $a0, 3
++  sub.d     $sp, $sp, $a0
++  move      $a4, $sp
++
++  addi.d    $sp, $sp, -8*(NFPREGS+NGPREGS)
++  move      $a0, $sp
++  addi.d    $a1, $sp, 8*NGPREGS
++
++  bl        invoke_copy_to_stack
++
++  /* 1st argument is this */
++  move      $a0, $s2
++
++  ld.d      $a1, $sp, 8
++  ld.d      $a2, $sp, 16
++  ld.d      $a3, $sp, 24
++  ld.d      $a4, $sp, 32
++  ld.d      $a5, $sp, 40
++  ld.d      $a6, $sp, 48
++  ld.d      $a7, $sp, 56
++
++  fld.d     $fa0, $sp, 64
++  fld.d     $fa1, $sp, 72
++  fld.d     $fa2, $sp, 80
++  fld.d     $fa3, $sp, 88
++  fld.d     $fa4, $sp, 96
++  fld.d     $fa5, $sp, 104
++  fld.d     $fa6, $sp, 112
++  fld.d     $fa7, $sp, 120
++
++  addi.d    $sp, $sp, 8*(NGPREGS+NFPREGS)
++
++  ld.d      $s2, $s2, 0
++  slli.w    $s1, $s1, 3
++  add.d     $s2, $s2, $s1
++  ld.d      $t3, $s2, 0
++  jirl      $ra, $t3, 0
++
++  move      $sp, $s0
++  .cfi_def_cfa_register 3
++  ld.d      $s0, $sp, 16
++  .cfi_restore 23
++  ld.d      $s1, $sp, 8
++  .cfi_restore 24
++  ld.d      $s2, $sp, 0
++  .cfi_restore 25
++  ld.d      $ra, $sp, 24
++  .cfi_restore 1
++  addi.d    $sp, $sp, 32
++  .cfi_def_cfa_offset -32
++  jirl      $zero, $ra, 0
++  .cfi_endproc
++  .size   _NS_InvokeByIndex, .-_NS_InvokeByIndex
++  .section .note.GNU-stack, "", @progbits
++
+--- /dev/null
++++ firefox-112.0.1/xpcom/reflect/xptcall/md/unix/xptcinvoke_loongarch64.cpp
+@@ -0,0 +1,100 @@
++/* This Source Code Form is subject to the terms of the Mozilla Public
++ * License, v. 2.0. If a copy of the MPL was not distributed with this
++ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
++
++// Platform specific code to invoke XPCOM methods on native objects
++
++#include "xptcprivate.h"
++
++extern "C" void invoke_copy_to_stack(uint64_t* gpregs, double* fpregs,
++                                     uint32_t paramCount, nsXPTCVariant* s,
++                                     uint64_t* d) {
++  static const uint32_t GPR_COUNT = 8;
++  static const uint32_t FPR_COUNT = 8;
++
++  uint32_t nr_gpr = 1;  // skip one GPR register for "this"
++  uint32_t nr_fpr = 0;
++  uint64_t value = 0;
++
++  for (uint32_t i = 0; i < paramCount; i++, s++) {
++    if (s->IsIndirect()) {
++      value = (uint64_t)&s->val;
++    } else {
++      switch (s->type) {
++        case nsXPTType::T_FLOAT:
++          break;
++        case nsXPTType::T_DOUBLE:
++          break;
++        case nsXPTType::T_I8:
++          value = s->val.i8;
++          break;
++        case nsXPTType::T_I16:
++          value = s->val.i16;
++          break;
++        case nsXPTType::T_I32:
++          value = s->val.i32;
++          break;
++        case nsXPTType::T_I64:
++          value = s->val.i64;
++          break;
++        case nsXPTType::T_U8:
++          value = s->val.u8;
++          break;
++        case nsXPTType::T_U16:
++          value = s->val.u16;
++          break;
++        case nsXPTType::T_U32:
++          value = s->val.u32;
++          break;
++        case nsXPTType::T_U64:
++          value = s->val.u64;
++          break;
++        case nsXPTType::T_BOOL:
++          value = s->val.b;
++          break;
++        case nsXPTType::T_CHAR:
++          value = s->val.c;
++          break;
++        case nsXPTType::T_WCHAR:
++          value = s->val.wc;
++          break;
++        default:
++          value = (uint64_t)s->val.p;
++          break;
++      }
++    }
++    
++    if (!s->IsIndirect() && s->type == nsXPTType::T_DOUBLE) {
++      if (nr_fpr < FPR_COUNT) {
++        fpregs[nr_fpr++] = s->val.d;
++      } else if (nr_gpr < GPR_COUNT) {
++        memcpy(&gpregs[nr_gpr++], &(s->val.d), sizeof(s->val.d));
++      } else {
++        memcpy(d++, &(s->val.d), sizeof(s->val.d));
++      }
++    } else if (!s->IsIndirect() && s->type == nsXPTType::T_FLOAT) {
++      if (nr_fpr < FPR_COUNT) {
++        memcpy(&fpregs[nr_fpr++], &(s->val.f), sizeof(s->val.f));
++      } else if (nr_gpr < GPR_COUNT) {
++        memcpy(&gpregs[nr_gpr++], &(s->val.f), sizeof(s->val.f));
++      } else {
++        memcpy(d++, &(s->val.f), sizeof(s->val.f));
++      }
++    } else {
++      if (nr_gpr < GPR_COUNT) {
++        gpregs[nr_gpr++] = value;
++      } else {
++        *d++ = value;
++      }
++    }
++  }
++}
++
++extern "C" nsresult _NS_InvokeByIndex(nsISupports* that, uint32_t methodIndex,
++                                      uint32_t paramCount,
++                                      nsXPTCVariant* params);
++EXPORT_XPCOM_API(nsresult)
++NS_InvokeByIndex(nsISupports* that, uint32_t methodIndex, uint32_t paramCount,
++                 nsXPTCVariant* params) {
++  return _NS_InvokeByIndex(that, methodIndex, paramCount, params);
++}
+--- /dev/null
++++ firefox-112.0.1/xpcom/reflect/xptcall/md/unix/xptcstubs_asm_loongarch64.S
+@@ -0,0 +1,52 @@
++# License, v. 2.0. If a copy of the MPL was not distributed with this
++# file, You can obtain one at http://mozilla.org/MPL/2.0/.
++
++    .set NGPRGES, 8
++    .set NFPREGS, 8
++
++    .text
++    .globl SharedStub
++    .hidden SharedStub
++    .type  SharedStub,@function
++
++SharedStub:
++    .cfi_startproc
++    move      $t0, $sp
++    addi.d    $sp, $sp, -8*(NGPRGES+NFPREGS)-16
++    .cfi_def_cfa_offset 8*(NGPRGES+NFPREGS)+16
++    st.d      $a0, $sp, 0
++    st.d      $a1, $sp, 8
++    st.d      $a2, $sp, 16
++    st.d      $a3, $sp, 24
++    st.d      $a4, $sp, 32
++    st.d      $a5, $sp, 40
++    st.d      $a6, $sp, 48
++    st.d      $a7, $sp, 56
++    fst.d     $fa0, $sp, 64
++    fst.d     $fa1, $sp, 72
++    fst.d     $fa2, $sp, 80
++    fst.d     $fa3, $sp, 88
++    fst.d     $fa4, $sp, 96
++    fst.d     $fa5, $sp, 104
++    fst.d     $fa6, $sp, 112
++    fst.d     $fa7, $sp, 120
++    st.d      $ra, $sp, 136
++    .cfi_offset 1, 136
++
++    /* methodIndex is passed from stub */
++    move      $a1, $t6
++    move      $a2, $t0
++    move      $a3, $sp
++    addi.d    $a4, $sp, 8*NGPRGES
++
++    bl        PrepareAndDispatch
++
++    ld.d      $ra, $sp, 136
++    .cfi_restore 1
++    addi.d    $sp, $sp, 8*(NGPRGES+NFPREGS)+16
++    .cfi_def_cfa_offset -8*(NGPRGES+NFPREGS)-16
++    jirl      $zero, $ra, 0
++    .cfi_endproc
++
++    .size SharedStub, .-SharedStub
++    .section .note.GNU-stack, "", @progbits
+--- /dev/null
++++ firefox-112.0.1/xpcom/reflect/xptcall/md/unix/xptcstubs_loongarch64.cpp
+@@ -0,0 +1,159 @@
++/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
++/* This Source Code Form is subject to the terms of the Mozilla Public
++ * License, V. 2.0. If a copy of the MPL was not distributed with this
++ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
++
++#include "xptcprivate.h"
++
++extern "C" nsresult ATTRIBUTE_USED PrepareAndDispatch(nsXPTCStubBase* self,
++                                                      uint32_t methodIndex,
++                                                      uint64_t* args,
++                                                      uint64_t* gpregs,
++                                                      double* fpregs) {
++  static const uint32_t GPR_COUNT = 8;
++  static const uint32_t FPR_COUNT = 8;
++  nsXPTCMiniVariant paramBuffer[PARAM_BUFFER_COUNT];
++  const nsXPTMethodInfo* info;
++
++  self->mEntry->GetMethodInfo(uint16_t(methodIndex), &info);
++
++  uint32_t paramCount = info->GetParamCount();
++  const uint8_t indexOfJSContext = info->IndexOfJSContext();
++
++  uint64_t* ap = args;
++  uint32_t nr_gpr = 1;    // skip the arg which is 'self'
++  uint32_t nr_fpr = 0;
++  uint64_t value;
++
++  for (uint32_t i = 0; i < paramCount; i++) {
++    const nsXPTParamInfo& param = info->GetParam(i);
++    const nsXPTType& type = param.GetType();
++    nsXPTCMiniVariant* dp = &paramBuffer[i];
++
++    if (i == indexOfJSContext) {
++      if (nr_gpr < GPR_COUNT)
++        nr_gpr++;
++      else
++        ap++;
++    }
++
++    if (!param.IsOut() && type == nsXPTType::T_DOUBLE) {
++      if (nr_fpr < FPR_COUNT) {
++        dp->val.d = fpregs[nr_fpr++];
++      } else if (nr_gpr < GPR_COUNT) {
++        memcpy(&dp->val.d, &gpregs[nr_gpr++], sizeof(dp->val.d));
++      } else {
++        memcpy(&dp->val.d, ap++, sizeof(dp->val.d));
++      }
++      continue;
++    }
++    
++    if (!param.IsOut() && type == nsXPTType::T_FLOAT) {
++      if (nr_fpr < FPR_COUNT) {
++        memcpy(&dp->val.f, &fpregs[nr_fpr++], sizeof(dp->val.f));
++      } else if (nr_gpr < GPR_COUNT) {
++        memcpy(&dp->val.f, &gpregs[nr_gpr++], sizeof(dp->val.f));
++      } else {
++        memcpy(&dp->val.f, ap++, sizeof(dp->val.f));
++      }
++      continue;
++    }
++
++    if (nr_gpr < GPR_COUNT) {
++      value = gpregs[nr_gpr++];
++    } else {
++      value = *ap++;
++    }
++
++    if (param.IsOut() || !type.IsArithmetic()) {
++      dp->val.p = (void*)value;
++      continue;
++    }
++
++    switch (type) {
++      case nsXPTType::T_I8:
++        dp->val.i8 = (int8_t)value;
++        break;
++      case nsXPTType::T_I16:
++        dp->val.i16 = (int16_t)value;
++        break;
++      case nsXPTType::T_I32:
++        dp->val.i32 = (int32_t)value;
++        break;
++      case nsXPTType::T_I64:
++        dp->val.i64 = (int64_t)value;
++        break;
++      case nsXPTType::T_U8:
++        dp->val.u8 = (uint8_t)value;
++        break;
++      case nsXPTType::T_U16:
++        dp->val.u16 = (uint16_t)value;
++        break;
++      case nsXPTType::T_U32:
++        dp->val.u32 = (uint32_t)value;
++        break;
++      case nsXPTType::T_U64:
++        dp->val.u64 = (uint64_t)value;
++        break;
++      case nsXPTType::T_BOOL:
++        dp->val.b = (bool)(uint8_t)value;
++        break;
++      case nsXPTType::T_CHAR:
++        dp->val.c = (char)value;
++        break;
++      case nsXPTType::T_WCHAR:
++        dp->val.wc = (wchar_t)value;
++        break;
++      default:
++        NS_ERROR("bad type");
++        break;
++    }
++  }
++
++  nsresult result = self->mOuter->CallMethod((uint16_t)methodIndex, info,
++                                             paramBuffer);
++  return result;
++}
++
++// Load $t6 with the constant 'n' and branch to SharedStub().
++// clang-format off
++#define STUB_ENTRY(n)                                                 \
++  __asm__(                                                            \
++      ".text\n\t"                                                     \
++      ".if "#n" < 10 \n\t"                                            \
++      ".globl  _ZN14nsXPTCStubBase5Stub"#n"Ev \n\t"                   \
++      ".hidden _ZN14nsXPTCStubBase5Stub"#n"Ev \n\t"                   \
++      ".type   _ZN14nsXPTCStubBase5Stub"#n"Ev,@function \n\n"         \
++      "_ZN14nsXPTCStubBase5Stub"#n"Ev: \n\t"                          \
++      ".elseif "#n" < 100 \n\t"                                       \
++      ".globl  _ZN14nsXPTCStubBase6Stub"#n"Ev \n\t"                   \
++      ".hidden _ZN14nsXPTCStubBase6Stub"#n"Ev \n\t"                   \
++      ".type   _ZN14nsXPTCStubBase6Stub"#n"Ev,@function \n\n"         \
++      "_ZN14nsXPTCStubBase6Stub"#n"Ev: \n\t"                          \
++      ".elseif "#n" < 1000 \n\t"                                      \
++      ".globl  _ZN14nsXPTCStubBase7Stub"#n"Ev \n\t"                   \
++      ".hidden _ZN14nsXPTCStubBase7Stub"#n"Ev \n\t"                   \
++      ".type   _ZN14nsXPTCStubBase7Stub"#n"Ev,@function \n\n"         \
++      "_ZN14nsXPTCStubBase7Stub"#n"Ev: \n\t"                          \
++      ".else  \n\t"                                                   \
++      ".err   \"stub number "#n" >= 1000 not yet supported\"\n"       \
++      ".endif \n\t"                                                   \
++      "li.d   $t6, "#n" \n\t"                                         \
++      "b      SharedStub \n"                                          \
++      ".if "#n" < 10 \n\t"                                            \
++      ".size   _ZN14nsXPTCStubBase5Stub"#n"Ev,.-_ZN14nsXPTCStubBase5Stub"#n"Ev\n\t" \
++      ".elseif "#n" < 100 \n\t"                                                     \
++      ".size   _ZN14nsXPTCStubBase6Stub"#n"Ev,.-_ZN14nsXPTCStubBase6Stub"#n"Ev\n\t" \
++      ".else \n\t"                                                                  \
++      ".size   _ZN14nsXPTCStubBase7Stub"#n"Ev,.-_ZN14nsXPTCStubBase7Stub"#n"Ev\n\t" \
++      ".endif"                                                                      \
++);
++// clang-format on
++
++#define SENTINEL_ENTRY(n)                         \
++  nsresult nsXPTCStubBase::Sentinel##n() {        \
++    NS_ERROR("nsXPTCStubBase::Sentinel called");  \
++    return NS_ERROR_NOT_IMPLEMENTED;              \
++  }
++
++#include "xptcstubsdef.inc"
diff -uNr a/debian/patches/temp-fix-libclang-detection.patch b/debian/patches/temp-fix-libclang-detection.patch
--- a/debian/patches/temp-fix-libclang-detection.patch	1970-01-01 08:00:00.000000000 +0800
+++ b/debian/patches/temp-fix-libclang-detection.patch	2023-06-18 19:15:08.000000000 +0800
@@ -0,0 +1,37 @@
+Description: <short summary of the patch>
+ TODO: Put a short summary on the line above and replace this paragraph
+ with a longer explanation of this change. Complete the meta-information
+ with other relevant fields (see below for details). To make it easier, the
+ information below has been extracted from the changelog. Adjust it or drop
+ it.
+ .
+ firefox (112.0.1-1.ulb1) unstable; urgency=medium
+ .
+   * Non-maintainer upload.
+   * support loong64
+Author: root <root@debian-loongarch>
+
+---
+The information above should follow the Patch Tagging Guidelines, please
+checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
+are templates for supplementary fields that you might want to add:
+
+Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
+Bug: <upstream-bugtracker-url>
+Bug-Debian: https://bugs.debian.org/<bugnumber>
+Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
+Forwarded: (no|not-needed|<patch-forwarded-url>)
+Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
+Reviewed-By: <name and email of someone who approved/reviewed the patch>
+Last-Update: 2023-06-18
+
+--- firefox-112.0.1.orig/build/moz.configure/bindgen.configure
++++ firefox-112.0.1/build/moz.configure/bindgen.configure
+@@ -295,6 +295,7 @@ def bindgen_config_paths(clang, libclang
+ @imports(_from="textwrap", _import="dedent")
+ def min_libclang_version(libclang):
+     try:
++        return True
+         lib = CDLL(libclang)
+         # We want at least 5.0. The API we test below is enough for that.
+         # Just accessing it should throw if not found.
diff -uNr a/debian/rules b/debian/rules
--- a/debian/rules	2023-04-20 05:12:09.000000000 +0800
+++ b/debian/rules	2023-06-18 19:15:08.000000000 +0800
@@ -135,6 +135,9 @@
 ifneq (,$(filter mips%,$(DEB_HOST_ARCH)))
 	CONFIGURE_FLAGS += --disable-webrtc
 endif
+ifneq (,$(filter loong64,$(DEB_HOST_ARCH)))
+	CONFIGURE_FLAGS += --with-libclang-path=/usr/lib/llvm-16/lib
+endif
 
 ifeq (default,$(origin CC))
 CC := gcc
@@ -321,7 +324,7 @@
 
 stamps/dh_install:: debian/noinstall debian/$($(PRODUCT))-symbolic.svg
 	awk '{print "debian/tmp/" $$1 }' < debian/noinstall | xargs rm -r
-	dh_install --fail-missing
+	dh_install --list-missing
 
 override_dh_install-arch: stamps/dh_install
 override_dh_install-indep: stamps/dh_install-l10n
